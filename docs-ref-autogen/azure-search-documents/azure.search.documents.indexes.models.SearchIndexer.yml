### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.SearchIndexer
name: SearchIndexer
fullName: azure.search.documents.indexes.models.SearchIndexer
module: azure.search.documents.indexes.models
inheritances:
- msrest.serialization.Model
summary: 'Represents an indexer.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'SearchIndexer(*, name: str, data_source_name: str, target_index_name: str,
    description: str | None = None, skillset_name: str | None = None, schedule: IndexingSchedule
    | None = None, parameters: IndexingParameters | None = None, field_mappings: List[FieldMapping]
    | None = None, output_field_mappings: List[FieldMapping] | None = None, is_disabled:
    bool | None = False, e_tag: str | None = None, encryption_key: SearchResourceEncryptionKey
    | None = None, **kwargs)'
  parameters:
  - name: name
    description: Required. The name of the indexer.
    isRequired: true
    types:
    - <xref:str>
  - name: description
    description: The description of the indexer.
    isRequired: true
    types:
    - <xref:str>
  - name: data_source_name
    description: 'Required. The name of the datasource from which this indexer reads

      data.'
    isRequired: true
    types:
    - <xref:str>
  - name: skillset_name
    description: The name of the skillset executing with this indexer.
    isRequired: true
    types:
    - <xref:str>
  - name: target_index_name
    description: Required. The name of the index to which this indexer writes data.
    isRequired: true
    types:
    - <xref:str>
  - name: schedule
    description: The schedule for this indexer.
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.IndexingSchedule>
  - name: parameters
    description: Parameters for indexer execution.
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.IndexingParameters>
  - name: field_mappings
    description: 'Defines mappings between fields in the data source and corresponding

      target fields in the index.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.search.documents.indexes.models.FieldMapping>]
  - name: output_field_mappings
    description: 'Output field mappings are applied after enrichment and

      immediately before indexing.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.search.documents.indexes.models.FieldMapping>]
  - name: is_disabled
    description: A value indicating whether the indexer is disabled. Default is false.
    isRequired: true
    types:
    - <xref:bool>
  - name: e_tag
    description: The ETag of the indexer.
    isRequired: true
    types:
    - <xref:str>
  - name: encryption_key
    description: 'A description of an encryption key that you create in Azure Key
      Vault.

      This key is used to provide an additional level of encryption-at-rest for your
      indexer

      definition (as well as indexer execution status) when you want full assurance
      that no one, not

      even Microsoft, can decrypt them in Azure Cognitive Search. Once you have encrypted
      your

      indexer definition, it will always remain encrypted. Azure Cognitive Search
      will ignore

      attempts to set this property to null. You can change this property as needed
      if you want to

      rotate your encryption key; Your indexer definition (and indexer execution status)
      will be

      unaffected. Encryption with customer-managed keys is not available for free
      search services,

      and is only available for paid services created on or after January 1, 2019.'
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.SearchResourceEncryptionKey>
methods:
- uid: azure.search.documents.indexes.models.SearchIndexer.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.SearchIndexer.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchIndexer.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.search.documents.indexes.models.SearchIndexer.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchIndexer.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.search.documents.indexes.models.SearchIndexer.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.SearchIndexer.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
