### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey
name: SearchResourceEncryptionKey
fullName: azure.search.documents.indexes.models.SearchResourceEncryptionKey
module: azure.search.documents.indexes.models
inheritances:
- msrest.serialization.Model
summary: 'A customer-managed encryption key in Azure Key Vault. Keys that you create
  and manage can be

  used to encrypt or decrypt data-at-rest in Azure Cognitive Search, such as indexes
  and synonym maps.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: SearchResourceEncryptionKey(**kwargs)
  parameters:
  - name: key_name
    description: 'Required. The name of your Azure Key Vault key to be used to encrypt
      your data

      at rest.'
    isRequired: true
    types:
    - <xref:str>
  - name: key_version
    description: 'Required. The version of your Azure Key Vault key to be used to
      encrypt

      your data at rest.'
    isRequired: true
    types:
    - <xref:str>
  - name: vault_uri
    description: 'Required. The URI of your Azure Key Vault, also referred to as DNS
      name, that

      contains the key to be used to encrypt your data at rest. An example URI might
      be [https://my](https://my)-

      keyvault-name.vault.azure.net.'
    isRequired: true
    types:
    - <xref:str>
  - name: application_id
    description: 'Required. An AAD Application ID that was granted the required access

      permissions to the Azure Key Vault that is to be used when encrypting your data
      at rest. The

      Application ID should not be confused with the Object ID for your AAD Application.'
    isRequired: true
    types:
    - <xref:str>
  - name: application_secret
    description: The authentication key of the specified AAD application.
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
