### YamlMime:PythonClass
uid: azure.ai.ml.automl.ImageClassificationJob
name: ImageClassificationJob
fullName: azure.ai.ml.automl.ImageClassificationJob
module: azure.ai.ml.automl
inheritances:
- azure.ai.ml.entities._job.automl.image.automl_image_classification_base.AutoMLImageClassificationBase
summary: 'Configuration for AutoML multi-class Image Classification job.


  Initialize a new AutoML multi-class Image Classification job.'
constructor:
  syntax: 'ImageClassificationJob(*, primary_metric: str | ClassificationPrimaryMetrics
    | None = None, **kwargs)'
  parameters:
  - name: primary_metric
    description: The primary metric to use for optimization
    isRequired: true
  - name: kwargs
    description: Job-specific arguments
    isRequired: true
methods:
- uid: azure.ai.ml.automl.ImageClassificationJob.dump
  name: dump
  summary: Dump the job content into a file in yaml format.
  signature: 'dump(dest: str | PathLike | IO, **kwargs) -> None'
  parameters:
  - name: dest
    description: 'The destination to receive this job''s content.

      Must be either a path to a local file, or an already-open file stream.

      If dest is a file path, a new file will be created,

      and an exception is raised if the file exists.

      If dest is an open file, the file will be written to directly,

      and an exception will be raised if the file is not writable.'
    isRequired: true
    types:
    - <xref:Union>[<xref:PathLike>, <xref:str>, <xref:IO>[<xref:AnyStr>]]
- uid: azure.ai.ml.automl.ImageClassificationJob.extend_search_space
  name: extend_search_space
  summary: 'Add Search space for AutoML Image Classification and Image Classification
    Multilabel tasks.


    ImageClassificationSearchSpace for searching through the parameter space

    :type Union[ImageClassificationSearchSpace, List[ImageClassificationSearchSpace]]'
  signature: 'extend_search_space(value: SearchSpace | List[SearchSpace]) -> None'
  parameters:
  - name: value
    description: specify either an instance of ImageClassificationSearchSpace or list
      of
    isRequired: true
- uid: azure.ai.ml.automl.ImageClassificationJob.set_data
  name: set_data
  signature: 'set_data(*, training_data: Input, target_column_name: str, validation_data:
    Input | None = None, validation_data_size: float | None = None) -> None'
- uid: azure.ai.ml.automl.ImageClassificationJob.set_limits
  name: set_limits
  summary: Limit settings for all AutoML Image Verticals.
  signature: 'set_limits(*, max_concurrent_trials: int | None = None, max_trials:
    int | None = None, timeout_minutes: int | None = None) -> None'
  parameters:
  - name: timeout_minutes
    description: AutoML job timeout.
    isRequired: true
    types:
    - <xref:datetime.timedelta>
- uid: azure.ai.ml.automl.ImageClassificationJob.set_sweep
  name: set_sweep
  summary: 'Sweep settings for all AutoML Image Verticals.


    ~azure.mgmt.machinelearningservices.models.SamplingAlgorithmType.GRID,

    ~azure.mgmt.machinelearningservices.models.SamplingAlgorithmType.BAYESIAN]

    :param early_termination: Type of early termination policy.

    :type early_termination: Union[

    ~azure.mgmt.machinelearningservices.models.BanditPolicy,

    ~azure.mgmt.machinelearningservices.models.MedianStoppingPolicy,

    ~azure.mgmt.machinelearningservices.models.TruncationSelectionPolicy]'
  signature: 'set_sweep(*, sampling_algorithm: str | Random | Grid | Bayesian, early_termination:
    BanditPolicy | MedianStoppingPolicy | TruncationSelectionPolicy | None = None)
    -> None'
  parameters:
  - name: sampling_algorithm
    description: 'Required. [Required] Type of the hyperparameter sampling

      algorithms. Possible values include: "Grid", "Random", "Bayesian".'
    isRequired: true
    types:
    - <xref:Union>[<xref:str>, <xref:azure.mgmt.machinelearningservices.models.SamplingAlgorithmType.RANDOM,>
- uid: azure.ai.ml.automl.ImageClassificationJob.set_training_parameters
  name: set_training_parameters
  summary: Setting Image training parameters for AutoML Image Classification and Image
    Classification Multilabel tasks.
  signature: 'set_training_parameters(*, advanced_settings: str | None = None, ams_gradient:
    bool | None = None, beta1: float | None = None, beta2: float | None = None, checkpoint_frequency:
    int | None = None, checkpoint_run_id: str | None = None, distributed: bool | None
    = None, early_stopping: bool | None = None, early_stopping_delay: int | None =
    None, early_stopping_patience: int | None = None, enable_onnx_normalization: bool
    | None = None, evaluation_frequency: int | None = None, gradient_accumulation_step:
    int | None = None, layers_to_freeze: int | None = None, learning_rate: float |
    None = None, learning_rate_scheduler: str | LearningRateScheduler | None = None,
    model_name: str | None = None, momentum: float | None = None, nesterov: bool |
    None = None, number_of_epochs: int | None = None, number_of_workers: int | None
    = None, optimizer: str | StochasticOptimizer | None = None, random_seed: int |
    None = None, step_lr_gamma: float | None = None, step_lr_step_size: int | None
    = None, training_batch_size: int | None = None, validation_batch_size: int | None
    = None, warmup_cosine_lr_cycles: float | None = None, warmup_cosine_lr_warmup_epochs:
    int | None = None, weight_decay: float | None = None, training_crop_size: int
    | None = None, validation_crop_size: int | None = None, validation_resize_size:
    int | None = None, weighted_loss: int | None = None) -> None'
  parameters:
  - name: advanced_settings
    description: Settings for advanced scenarios.
    isRequired: true
    types:
    - <xref:str>
  - name: ams_gradient
    description: Enable AMSGrad when optimizer is 'adam' or 'adamw'.
    isRequired: true
    types:
    - <xref:bool>
  - name: beta1
    description: 'Value of ''beta1'' when optimizer is ''adam'' or ''adamw''. Must
      be a float in the

      range [0, 1].'
    isRequired: true
    types:
    - <xref:float>
  - name: beta2
    description: 'Value of ''beta2'' when optimizer is ''adam'' or ''adamw''. Must
      be a float in the

      range [0, 1].'
    isRequired: true
    types:
    - <xref:float>
  - name: checkpoint_frequency
    description: 'Frequency to store model checkpoints. Must be a positive

      integer.'
    isRequired: true
    types:
    - <xref:int>
  - name: checkpoint_run_id
    description: 'The id of a previous run that has a pretrained checkpoint for

      incremental training.'
    isRequired: true
    types:
    - <xref:str>
  - name: distributed
    description: Whether to use distributed training.
    isRequired: true
    types:
    - <xref:bool>
  - name: early_stopping
    description: Enable early stopping logic during training.
    isRequired: true
    types:
    - <xref:bool>
  - name: early_stopping_delay
    description: 'Minimum number of epochs or validation evaluations to wait

      before primary metric improvement

      is tracked for early stopping. Must be a positive integer.'
    isRequired: true
    types:
    - <xref:int>
  - name: early_stopping_patience
    description: 'Minimum number of epochs or validation evaluations with no

      primary metric improvement before

      the run is stopped. Must be a positive integer.'
    isRequired: true
    types:
    - <xref:int>
  - name: enable_onnx_normalization
    description: Enable normalization when exporting ONNX model.
    isRequired: true
    types:
    - <xref:bool>
  - name: evaluation_frequency
    description: 'Frequency to evaluate validation dataset to get metric scores.

      Must be a positive integer.'
    isRequired: true
    types:
    - <xref:int>
  - name: gradient_accumulation_step
    description: 'Gradient accumulation means running a configured number of

      "GradAccumulationStep" steps without

      updating the model weights while accumulating the gradients of those steps,
      and then using

      the accumulated gradients to compute the weight updates. Must be a positive
      integer.'
    isRequired: true
    types:
    - <xref:int>
  - name: layers_to_freeze
    description: 'Number of layers to freeze for the model. Must be a positive

      integer.

      For instance, passing 2 as value for ''seresnext'' means

      freezing layer0 and layer1. For a full list of models supported and details
      on layer freeze,

      please

      see: [https://docs.microsoft.com/en-us/azure/machine-learning/reference-automl-images-hyperparameters#model-agnostic-hyperparameters](https://docs.microsoft.com/en-us/azure/machine-learning/reference-automl-images-hyperparameters#model-agnostic-hyperparameters).   #
      pylint: disable=line-too-long'
    isRequired: true
    types:
    - <xref:int>
  - name: learning_rate
    description: Initial learning rate. Must be a float in the range [0, 1].
    isRequired: true
    types:
    - <xref:float>
  - name: learning_rate_scheduler
    description: 'Type of learning rate scheduler. Must be ''warmup_cosine'' or

      ''step''. Possible values include: "None", "WarmupCosine", "Step".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.machinelearningservices.models.LearningRateScheduler>
  - name: model_name
    description: 'Name of the model to use for training.

      For more information on the available models please visit the official documentation:

      [https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models).'
    isRequired: true
    types:
    - <xref:str>
  - name: momentum
    description: 'Value of momentum when optimizer is ''sgd''. Must be a float in
      the range [0,

      1].'
    isRequired: true
    types:
    - <xref:float>
  - name: nesterov
    description: Enable nesterov when optimizer is 'sgd'.
    isRequired: true
    types:
    - <xref:bool>
  - name: number_of_epochs
    description: Number of training epochs. Must be a positive integer.
    isRequired: true
    types:
    - <xref:int>
  - name: number_of_workers
    description: Number of data loader workers. Must be a non-negative integer.
    isRequired: true
    types:
    - <xref:int>
  - name: optimizer
    description: 'Type of optimizer. Possible values include: "None", "Sgd", "Adam",
      "Adamw".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.machinelearningservices.models.StochasticOptimizer>
  - name: random_seed
    description: Random seed to be used when using deterministic training.
    isRequired: true
    types:
    - <xref:int>
  - name: step_lr_gamma
    description: 'Value of gamma when learning rate scheduler is ''step''. Must be
      a float

      in the range [0, 1].'
    isRequired: true
    types:
    - <xref:float>
  - name: step_lr_step_size
    description: 'Value of step size when learning rate scheduler is ''step''. Must
      be

      a positive integer.'
    isRequired: true
    types:
    - <xref:int>
  - name: training_batch_size
    description: Training batch size. Must be a positive integer.
    isRequired: true
    types:
    - <xref:int>
  - name: validation_batch_size
    description: Validation batch size. Must be a positive integer.
    isRequired: true
    types:
    - <xref:int>
  - name: warmup_cosine_lr_cycles
    description: 'Value of cosine cycle when learning rate scheduler is

      ''warmup_cosine''. Must be a float in the range [0, 1].'
    isRequired: true
    types:
    - <xref:float>
  - name: warmup_cosine_lr_warmup_epochs
    description: 'Value of warmup epochs when learning rate scheduler is

      ''warmup_cosine''. Must be a positive integer.'
    isRequired: true
    types:
    - <xref:int>
  - name: weight_decay
    description: 'Value of weight decay when optimizer is ''sgd'', ''adam'', or ''adamw''.
      Must

      be a float in the range[0, 1].'
    isRequired: true
    types:
    - <xref:float>
  - name: training_crop_size
    description: 'Image crop size that is input to the neural network for the

      training dataset. Must be a positive integer.'
    isRequired: true
    types:
    - <xref:int>
  - name: validation_crop_size
    description: 'Image crop size that is input to the neural network for the

      validation dataset. Must be a positive integer.'
    isRequired: true
    types:
    - <xref:int>
  - name: validation_resize_size
    description: 'Image size to which to resize before cropping for validation

      dataset. Must be a positive integer.'
    isRequired: true
    types:
    - <xref:int>
  - name: weighted_loss
    description: 'Weighted loss. The accepted values are 0 for no weighted loss.

      1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights.
      Must be

      0 or 1 or 2.'
    isRequired: true
    types:
    - <xref:int>
attributes:
- uid: azure.ai.ml.automl.ImageClassificationJob.base_path
  name: base_path
  summary: Base path of the resource.
  return:
    description: Base path of the resource
    types:
    - <xref:str>
- uid: azure.ai.ml.automl.ImageClassificationJob.creation_context
  name: creation_context
  summary: Creation context.
  return:
    description: Creation metadata of the resource.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.SystemData>]
- uid: azure.ai.ml.automl.ImageClassificationJob.id
  name: id
  summary: Resource ID.
  return:
    description: Global id of the resource, Azure Resource Manager ID
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.automl.ImageClassificationJob.inputs
  name: inputs
- uid: azure.ai.ml.automl.ImageClassificationJob.limits
  name: limits
- uid: azure.ai.ml.automl.ImageClassificationJob.log_files
  name: log_files
  summary: Job output files.
  return:
    description: Dictionary of log names to url.
    types:
    - <xref:Optional>[<xref:Dict>[<xref:str>, <xref:str>]]
- uid: azure.ai.ml.automl.ImageClassificationJob.log_verbosity
  name: log_verbosity
- uid: azure.ai.ml.automl.ImageClassificationJob.outputs
  name: outputs
- uid: azure.ai.ml.automl.ImageClassificationJob.primary_metric
  name: primary_metric
- uid: azure.ai.ml.automl.ImageClassificationJob.search_space
  name: search_space
- uid: azure.ai.ml.automl.ImageClassificationJob.status
  name: status
  summary: "Status of the job.\n\nCommon values returned include \"Running\", \"Completed\"\
    , and \"Failed\".\n\n> [!NOTE]\n> NotStarted - This is a temporary state client-side\
    \ Run objects are in before cloud submission.\n>\n> \n>\n> Starting - The Run\
    \ has started being processed in the cloud. The caller has a run ID at this point.\n\
    >\n> \n>\n> Provisioning - Returned when on-demand compute is being created for\
    \ a given job submission.\n>\n> \n>\n> Preparing - The run environment is being\
    \ prepared:\n>\n> \n>\n> docker image build\n>\n> \n>\n> conda environment setup\n\
    >\n> \n>\n> Queued - The job is queued in the compute target. For example, in\
    \ BatchAI the job is in queued state\n>\n> \n>\n> while waiting for all the requested\
    \ nodes to be ready.\n>\n> \n>\n> Running - The job started to run in the compute\
    \ target.\n>\n> \n>\n> Finalizing - User code has completed and the run is in\
    \ post-processing stages.\n>\n> \n>\n> CancelRequested - Cancellation has been\
    \ requested for the job.\n>\n> \n>\n> Completed - The run completed successfully.\
    \ This includes both the user code and run\n>\n> \n>\n> post-processing stages.\n\
    >\n> \n>\n> Failed - The run failed. Usually the Error property on a run will\
    \ provide details as to why.\n>\n> \n>\n> Canceled - Follows a cancellation request\
    \ and indicates that the run is now successfully cancelled.\n>\n> \n>\n> NotResponding\
    \ - For runs that have Heartbeats enabled, no heartbeat has been recently sent.\n\
    >"
  return:
    description: Status of the job.
    types:
    - <xref:str>
- uid: azure.ai.ml.automl.ImageClassificationJob.studio_url
  name: studio_url
  summary: Azure ML studio endpoint.
  return:
    description: URL to the job detail page.
    types:
    - <xref:Optional>[<xref:str>]
- uid: azure.ai.ml.automl.ImageClassificationJob.sweep
  name: sweep
- uid: azure.ai.ml.automl.ImageClassificationJob.task_type
  name: task_type
  summary: Get task type.
  return:
    description: 'The type of task to run. Possible values include: "classification",
      "regression", "forecasting".'
    types:
    - <xref:str>
- uid: azure.ai.ml.automl.ImageClassificationJob.test_data
  name: test_data
  summary: Get test data.
  return:
    description: Test data input
    types:
    - <xref:azure.ai.ml.Input>
- uid: azure.ai.ml.automl.ImageClassificationJob.training_data
  name: training_data
  summary: Get training data.
  return:
    description: Training data input
    types:
    - <xref:azure.ai.ml.Input>
- uid: azure.ai.ml.automl.ImageClassificationJob.training_parameters
  name: training_parameters
- uid: azure.ai.ml.automl.ImageClassificationJob.type
  name: type
  summary: Type of the job, supported are 'command' and 'sweep'.
  return:
    description: Type of the job.
    types:
    - <xref:str>
- uid: azure.ai.ml.automl.ImageClassificationJob.validation_data
  name: validation_data
  summary: Get validation data.
  return:
    description: Validation data input
    types:
    - <xref:azure.ai.ml.Input>
