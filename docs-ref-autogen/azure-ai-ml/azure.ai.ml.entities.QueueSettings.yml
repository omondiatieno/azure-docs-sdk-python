### YamlMime:PythonClass
uid: azure.ai.ml.entities.QueueSettings
name: QueueSettings
fullName: azure.ai.ml.entities.QueueSettings
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._mixins.RestTranslatableMixin
- azure.ai.ml.entities._mixins.DictMixin
summary: "> [!NOTE]\n> This is an experimental class, and may change at any time.\
  \ Please see [https://aka.ms/azuremlexperimental](https://aka.ms/azuremlexperimental)\
  \ for more information.\n>\n\nQueueSettings.\n:ivar job_tier: Enum to determine\
  \ the job tier. Possible values include: \"Spot\", \"Basic\",\n\n   \"Standard\"\
  , \"Premium\"."
constructor:
  syntax: 'QueueSettings(*, job_tier: Literal[''spot'', ''basic'', ''standard'', ''premium'']
    | None = None, priority: Literal[''low'', ''medium'', ''high''] | None = None,
    **kwargs)'
variables:
- description: Controls the priority of the job on a compute.
  name: priority
  types:
  - <xref:str>
methods:
- uid: azure.ai.ml.entities.QueueSettings.get
  name: get
  signature: 'get(key: Any, default: Any | None = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.QueueSettings.has_key
  name: has_key
  signature: 'has_key(k: Any) -> bool'
  parameters:
  - name: k
    isRequired: true
- uid: azure.ai.ml.entities.QueueSettings.items
  name: items
  signature: items() -> list
- uid: azure.ai.ml.entities.QueueSettings.keys
  name: keys
  signature: keys() -> list
- uid: azure.ai.ml.entities.QueueSettings.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.ml.entities.QueueSettings.values
  name: values
  signature: values() -> list
