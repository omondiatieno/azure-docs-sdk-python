### YamlMime:PythonClass
uid: azure.durable_functions.tasks.timer_task.TimerTask
name: TimerTask
fullName: azure.durable_functions.tasks.timer_task.TimerTask
module: azure.durable_functions.tasks.timer_task
inheritances:
- azure.durable_functions.models.Task.Task
summary: "Represents a pending timer.\n\nAll pending timers must be completed or canceled\
  \ for an orchestration to complete.\n\nExample: Cancel a timer\n>>``<<`\ntimeout_task\
  \ = context.df.create_timer(expiration_date)\nif not timeout_task.is_completed():\n\
  \n   timeout_task.cancel()\n\n>>``<<>>`<<"
constructor:
  syntax: 'TimerTask(action: CreateTimerAction, is_completed, timestamp, id_, is_played=False)'
  parameters:
  - name: action
  - name: is_completed
  - name: timestamp
  - name: id_
  - name: is_played
    defaultValue: 'False'
methods:
- uid: azure.durable_functions.tasks.timer_task.TimerTask.cancel
  name: cancel
  summary: Cancel a timer.
  signature: cancel()
  exceptions:
  - type: ValueError
    description: Raises an error if the task is already completed and an attempt is
      made to cancel it
- uid: azure.durable_functions.tasks.timer_task.TimerTask.is_cancelled
  name: is_cancelled
  summary: Check of a timer is cancelled.
  signature: is_cancelled() -> bool
  return:
    description: Returns whether a timer has been cancelled or not
    types:
    - <xref:bool>
attributes:
- uid: azure.durable_functions.tasks.timer_task.TimerTask.action
  name: action
  summary: 'Get the scheduled action represented by the task.


    _Internal use only._'
- uid: azure.durable_functions.tasks.timer_task.TimerTask.exception
  name: exception
  summary: 'Get the error thrown when attempting to perform the task''s action.


    If the Task has not yet completed or has completed successfully, *None*'
- uid: azure.durable_functions.tasks.timer_task.TimerTask.id
  name: id
  summary: 'Get the ID number of the task.


    _Internal use only._'
- uid: azure.durable_functions.tasks.timer_task.TimerTask.is_completed
  name: is_completed
  summary: 'Get indicator whether the task has completed.


    Note that completion is not equivalent to success.'
- uid: azure.durable_functions.tasks.timer_task.TimerTask.is_faulted
  name: is_faulted
  summary: Get indicator whether the task faulted in some way due to error.
- uid: azure.durable_functions.tasks.timer_task.TimerTask.result
  name: result
  summary: Get the result of the task, if completed. Otherwise *None*.
- uid: azure.durable_functions.tasks.timer_task.TimerTask.timestamp
  name: timestamp
  summary: Get the timestamp of the task.
