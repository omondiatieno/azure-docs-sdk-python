### YamlMime:PythonClass
uid: msrest.pipeline.universal.HTTPLogger
name: HTTPLogger
fullName: msrest.pipeline.universal.HTTPLogger
module: msrest.pipeline.universal
inheritances:
- msrest.pipeline.SansIOHTTPPolicy
summary: 'A policy that logs HTTP request and response to the DEBUG logger.


  This accepts both global configuration, and kwargs request level with "enable_http_logger"'
constructor:
  syntax: HTTPLogger(enable_http_logger=False)
  parameters:
  - name: enable_http_logger
    defaultValue: 'False'
methods:
- uid: msrest.pipeline.universal.HTTPLogger.on_exception
  name: on_exception
  summary: "Is executed if an exception comes back from the following\npolicy.\n\n\
    Return True if the exception has been handled and should not\nbe forwarded to\
    \ the caller.\n\nThis method is executed inside the exception handler.\nTo get\
    \ the exception, raise and catch it:\n\n   try:\n      raise\n\n   except MyError:\n\
    \      do_something()\n\nor use\n\n   exc_type, exc_value, exc_traceback = sys.exc_info()"
  signature: 'on_exception(request: Request[HTTPRequestType], **kwargs: Any) -> bool'
  parameters:
  - name: request
    isRequired: true
- uid: msrest.pipeline.universal.HTTPLogger.on_request
  name: on_request
  signature: 'on_request(request: Request, **kwargs: Any) -> None'
  parameters:
  - name: request
    isRequired: true
- uid: msrest.pipeline.universal.HTTPLogger.on_response
  name: on_response
  signature: 'on_response(request: Request, response: Response, **kwargs: Any) ->
    None'
  parameters:
  - name: request
    isRequired: true
  - name: response
    isRequired: true
