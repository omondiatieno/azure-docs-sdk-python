### YamlMime:PythonClass
uid: msrest.pipeline.universal.HeadersPolicy
name: HeadersPolicy
fullName: msrest.pipeline.universal.HeadersPolicy
module: msrest.pipeline.universal
inheritances:
- msrest.pipeline.SansIOHTTPPolicy
summary: 'A simple policy that sends the given headers

  with the request.


  This overwrite any headers already defined in the request.'
constructor:
  syntax: 'HeadersPolicy(headers: Mapping[str, str])'
  parameters:
  - name: headers
methods:
- uid: msrest.pipeline.universal.HeadersPolicy.on_exception
  name: on_exception
  summary: "Is executed if an exception comes back from the following\npolicy.\n\n\
    Return True if the exception has been handled and should not\nbe forwarded to\
    \ the caller.\n\nThis method is executed inside the exception handler.\nTo get\
    \ the exception, raise and catch it:\n\n   try:\n      raise\n\n   except MyError:\n\
    \      do_something()\n\nor use\n\n   exc_type, exc_value, exc_traceback = sys.exc_info()"
  signature: 'on_exception(request: Request[HTTPRequestType], **kwargs: Any) -> bool'
  parameters:
  - name: request
    isRequired: true
- uid: msrest.pipeline.universal.HeadersPolicy.on_request
  name: on_request
  signature: 'on_request(request: Request, **kwargs: Any) -> None'
  parameters:
  - name: request
    isRequired: true
- uid: msrest.pipeline.universal.HeadersPolicy.on_response
  name: on_response
  summary: Is executed after the request comes back from the policy.
  signature: 'on_response(request: Request[HTTPRequestType], response: Response[HTTPRequestType,
    HTTPResponseType], **kwargs: Any) -> None'
  parameters:
  - name: request
    isRequired: true
  - name: response
    isRequired: true
