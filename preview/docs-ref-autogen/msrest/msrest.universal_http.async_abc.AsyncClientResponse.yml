### YamlMime:PythonClass
uid: msrest.universal_http.async_abc.AsyncClientResponse
name: AsyncClientResponse
fullName: msrest.universal_http.async_abc.AsyncClientResponse
module: msrest.universal_http.async_abc
inheritances:
- msrest.universal_http.HTTPClientResponse
constructor:
  syntax: 'AsyncClientResponse(request: ClientRequest, internal_response: Any)'
  parameters:
  - name: request
  - name: internal_response
methods:
- uid: msrest.universal_http.async_abc.AsyncClientResponse.body
  name: body
  summary: Return the whole body as bytes in memory.
  signature: body() -> bytes
- uid: msrest.universal_http.async_abc.AsyncClientResponse.raise_for_status
  name: raise_for_status
  summary: Raise for status. Should be overridden, but basic implementation provided.
  signature: raise_for_status()
- uid: msrest.universal_http.async_abc.AsyncClientResponse.stream_download
  name: stream_download
  summary: 'Generator for streaming request body data.


    Should be implemented by sub-classes if streaming download

    is supported.'
  signature: 'stream_download(chunk_size: int | None = None, callback: Callable |
    None = None) -> AsyncIterator[bytes]'
  parameters:
  - name: callback
    description: Custom callback for monitoring progress.
    defaultValue: None
  - name: chunk_size
    defaultValue: None
    types:
    - <xref:int>
- uid: msrest.universal_http.async_abc.AsyncClientResponse.text
  name: text
  summary: Return the whole body as a string.
  signature: 'text(encoding: str = None) -> str'
  parameters:
  - name: encoding
    description: 'The encoding to apply. If None, use "utf-8-sig".

      Implementation can be smarter if they want (using headers).'
    defaultValue: None
    types:
    - <xref:str>
