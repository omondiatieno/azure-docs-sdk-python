### YamlMime:PythonClass
uid: azure.developer.loadtesting.operations.TestOperations
name: TestOperations
fullName: azure.developer.loadtesting.operations.TestOperations
module: azure.developer.loadtesting.operations
inheritances:
- azure.developer.loadtesting.operations._operations.TestOperations
summary: for performing the operations on test
constructor:
  syntax: TestOperations(*args, **kwargs)
methods:
- uid: azure.developer.loadtesting.operations.TestOperations.create_or_update_test
  name: create_or_update_test
  summary: 'Create a new test or Update an existing test.


    Create a new test or Update an existing test.'
  signature: 'create_or_update_test(test_id: str, body: MutableMapping[str, Any] |
    IO, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: test_id
    description: 'Unique name for load test, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Load test model. Is either a model type or a IO type. Required.
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:IO>
  - name: content_type
    description: 'Body Parameter content-type. Known values are:

      ''application/merge-patch+json''. Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200, 201\n   response == {\n       \"\
    createdBy\": \"str\",  # Optional. The user that created the test model.\n   \
    \    \"createdDateTime\": \"2020-02-20 00:00:00\",  # Optional. The created\n\
    \         DateTime(ISO 8601 literal format) of the test model.\n       \"description\"\
    : \"str\",  # Optional. The test description.\n       \"displayName\": \"str\"\
    ,  # Optional. Display name of a test.\n       \"environmentVariables\": {\n \
    \          \"str\": \"str\"  # Optional. Environment variables which are defined\
    \ as\n             a set of <name,value> pairs.\n       },\n       \"inputArtifacts\"\
    : {\n           \"additionalUrls\": [\n               {\n                   \"\
    expireTime\": \"2020-02-20 00:00:00\",  # Optional.\n                     Expiry\
    \ time of the file.\n                   \"fileId\": \"str\",  # Optional. File\
    \ unique identifier.\n                   \"fileType\": 0,  # Optional. Integer\
    \ representation of\n                     the file type (0 = JMX_FILE, 1 = USER_PROPERTIES,\
    \ 2 =\n                     ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and\
    \ 2.\n                   \"filename\": \"str\",  # Optional. Name of the file.\n\
    \                   \"url\": \"str\",  # Optional. File URL.\n               \
    \    \"validationStatus\": \"str\"  # Optional. Validation\n                 \
    \    status of the file.\n               }\n           ],\n           \"configUrl\"\
    : {\n               \"expireTime\": \"2020-02-20 00:00:00\",  # Optional. Expiry\
    \ time\n                 of the file.\n               \"fileId\": \"str\",  #\
    \ Optional. File unique identifier.\n               \"fileType\": 0,  # Optional.\
    \ Integer representation of the\n                 file type (0 = JMX_FILE, 1 =\
    \ USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS).\n                 Known values are:\
    \ 0, 1, and 2.\n               \"filename\": \"str\",  # Optional. Name of the\
    \ file.\n               \"url\": \"str\",  # Optional. File URL.\n           \
    \    \"validationStatus\": \"str\"  # Optional. Validation status of\n       \
    \          the file.\n           },\n           \"inputArtifactsZipFileurl\":\
    \ {\n               \"expireTime\": \"2020-02-20 00:00:00\",  # Optional. Expiry\
    \ time\n                 of the file.\n               \"fileId\": \"str\",  #\
    \ Optional. File unique identifier.\n               \"fileType\": 0,  # Optional.\
    \ Integer representation of the\n                 file type (0 = JMX_FILE, 1 =\
    \ USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS).\n                 Known values are:\
    \ 0, 1, and 2.\n               \"filename\": \"str\",  # Optional. Name of the\
    \ file.\n               \"url\": \"str\",  # Optional. File URL.\n           \
    \    \"validationStatus\": \"str\"  # Optional. Validation status of\n       \
    \          the file.\n           },\n           \"testScriptUrl\": {\n       \
    \        \"expireTime\": \"2020-02-20 00:00:00\",  # Optional. Expiry time\n \
    \                of the file.\n               \"fileId\": \"str\",  # Optional.\
    \ File unique identifier.\n               \"fileType\": 0,  # Optional. Integer\
    \ representation of the\n                 file type (0 = JMX_FILE, 1 = USER_PROPERTIES,\
    \ 2 = ADDITIONAL_ARTIFACTS).\n                 Known values are: 0, 1, and 2.\n\
    \               \"filename\": \"str\",  # Optional. Name of the file.\n      \
    \         \"url\": \"str\",  # Optional. File URL.\n               \"validationStatus\"\
    : \"str\"  # Optional. Validation status of\n                 the file.\n    \
    \       },\n           \"userPropUrl\": {\n               \"expireTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Expiry time\n                 of the file.\n      \
    \         \"fileId\": \"str\",  # Optional. File unique identifier.\n        \
    \       \"fileType\": 0,  # Optional. Integer representation of the\n        \
    \         file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS).\n\
    \                 Known values are: 0, 1, and 2.\n               \"filename\"\
    : \"str\",  # Optional. Name of the file.\n               \"url\": \"str\",  #\
    \ Optional. File URL.\n               \"validationStatus\": \"str\"  # Optional.\
    \ Validation status of\n                 the file.\n           }\n       },\n\
    \       \"keyvaultReferenceIdentityId\": \"str\",  # Optional. Resource Id of\
    \ the managed\n         identity referencing the Key vault.\n       \"keyvaultReferenceIdentityType\"\
    : \"str\",  # Optional. Type of the managed\n         identity referencing the\
    \ Key vault.\n       \"lastModifiedBy\": \"str\",  # Optional. The user that last\
    \ modified the test\n         model.\n       \"lastModifiedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. The last Modified\n         DateTime(ISO 8601 literal\
    \ format) of the test model.\n       \"loadTestConfig\": {\n           \"engineInstances\"\
    : 0,  # Optional. The number of engine instances to\n             execute load\
    \ test. Supported values are in range of 1-45. Required for\n             creating\
    \ a new test.\n           \"splitAllCSVs\": bool  # Optional. Whether all the\
    \ input CSV files\n             should be split evenly across all engines.\n \
    \      },\n       \"passFailCriteria\": {\n           \"passFailMetrics\": {\n\
    \               \"str\": {\n                   \"action\": \"str\",  # Optional.\
    \ Either \"u2018stop\"u2019\n                     or \"u2018continue\"u2019 after\
    \ the threshold is met. Default is\n                     \"u2018continue\"u2019.\n\
    \                   \"actualValue\": 0.0,  # Optional. The actual value of\n \
    \                    the client metric for the test run.\n                   \"\
    aggregate\": \"str\",  # Optional. The aggregation\n                     function\
    \ to be applied on the client metric. Allowed functions -\n                  \
    \   \"u2018percentage\"u2019 - for error metric ,\"u2018avg\"u2019,\n        \
    \             \"u2018p50\"u2019, \"u2018p90\"u2019, \"u2018p95\"u2019, \"u2018p99\"\
    u2019,\n                     \"u2018min\"u2019, \"u2018max\"u2019 - for response_time_ms\
    \ and latency\n                     metric, \"u2018avg\"u2019 - for requests_per_sec,\
    \ \"u2018count\"u2019 -\n                     for requests.\n                \
    \   \"clientmetric\": \"str\",  # Optional. The client metric\n              \
    \       on which the criteria should be applied. Allowed values -\n          \
    \           \"u2018response_time_ms\"u2019 , \"u2018latency\"u2019,\n        \
    \             \"u2018error\"u2019, \"u2018requests\"u2019,\n                 \
    \    \"u2018requests_per_sec\"u2019.\n                   \"condition\": \"str\"\
    ,  # Optional. The comparison\n                     operator. Supported types\
    \ \"u2018>\"u2019.\n                   \"requestName\": \"str\",  # Optional.\
    \ Request name for\n                     which the Pass fail criteria has to be\
    \ applied.\n                   \"result\": \"str\",  # Optional. Outcome of the\
    \ test\n                     run. possible outcome - \"u2018passed\"u2019 , \"\
    u2018failed\"u2019 ,\n                     \"u2018undetermined\"u2019.\n     \
    \              \"value\": 0.0  # Optional. The value to compare with\n       \
    \              the client metric. Allowed values - \"u2018error : [0.0 , 100.0]\
    \ unit-\n                     % \"u2019, response_time_ms and latency : any integer\
    \ value unit- ms.\n               }\n           }\n       },\n       \"resourceId\"\
    : \"str\",  # Optional. Fully qualified resource Id e.g\n         /subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}.\n\
    \       \"secrets\": {\n           \"str\": {\n               \"type\": \"str\"\
    ,  # Optional. Type of secret. eg.\n                 AKV_SECRET_URI/SECRET_VALUE.\n\
    \               \"value\": \"str\"  # Optional. The value of the secret, of type\n\
    \                 AKV_SECRET_URI or SECRET_VALUE.\n           }\n       },\n \
    \      \"subnetId\": \"str\",  # Optional. Subnet ID on which the load test instances\n\
    \         should run.\n       \"testId\": \"str\"  # Optional. Unique test name\
    \ as identifier.\n   }\n   ````\n"
- uid: azure.developer.loadtesting.operations.TestOperations.delete_load_test
  name: delete_load_test
  summary: 'Delete a test by its name.


    Delete a test by its name.'
  signature: 'delete_load_test(test_id: str, **kwargs: Any) -> None'
  parameters:
  - name: test_id
    description: 'Unique name for load test, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.developer.loadtesting.operations.TestOperations.delete_test_file
  name: delete_test_file
  summary: 'Delete file by the file name for a test.


    Delete file by the file name for a test.'
  signature: 'delete_test_file(test_id: str, file_id: str, **kwargs: Any) -> None'
  parameters:
  - name: test_id
    description: 'Unique name for load test, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: file_id
    description: 'Unique identifier for test file, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.developer.loadtesting.operations.TestOperations.get_load_test
  name: get_load_test
  summary: 'Get load test details by test name.


    Get load test details by test name.'
  signature: 'get_load_test(test_id: str, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: test_id
    description: 'Unique name for load test, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"createdBy\"\
    : \"str\",  # Optional. The user that created the test model.\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. The created\n         DateTime(ISO 8601\
    \ literal format) of the test model.\n       \"description\": \"str\",  # Optional.\
    \ The test description.\n       \"displayName\": \"str\",  # Optional. Display\
    \ name of a test.\n       \"environmentVariables\": {\n           \"str\": \"\
    str\"  # Optional. Environment variables which are defined as\n             a\
    \ set of <name,value> pairs.\n       },\n       \"inputArtifacts\": {\n      \
    \     \"additionalUrls\": [\n               {\n                   \"expireTime\"\
    : \"2020-02-20 00:00:00\",  # Optional.\n                     Expiry time of the\
    \ file.\n                   \"fileId\": \"str\",  # Optional. File unique identifier.\n\
    \                   \"fileType\": 0,  # Optional. Integer representation of\n\
    \                     the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n\
    \                     ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n\
    \                   \"filename\": \"str\",  # Optional. Name of the file.\n  \
    \                 \"url\": \"str\",  # Optional. File URL.\n                 \
    \  \"validationStatus\": \"str\"  # Optional. Validation\n                   \
    \  status of the file.\n               }\n           ],\n           \"configUrl\"\
    : {\n               \"expireTime\": \"2020-02-20 00:00:00\",  # Optional. Expiry\
    \ time\n                 of the file.\n               \"fileId\": \"str\",  #\
    \ Optional. File unique identifier.\n               \"fileType\": 0,  # Optional.\
    \ Integer representation of the\n                 file type (0 = JMX_FILE, 1 =\
    \ USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS).\n                 Known values are:\
    \ 0, 1, and 2.\n               \"filename\": \"str\",  # Optional. Name of the\
    \ file.\n               \"url\": \"str\",  # Optional. File URL.\n           \
    \    \"validationStatus\": \"str\"  # Optional. Validation status of\n       \
    \          the file.\n           },\n           \"inputArtifactsZipFileurl\":\
    \ {\n               \"expireTime\": \"2020-02-20 00:00:00\",  # Optional. Expiry\
    \ time\n                 of the file.\n               \"fileId\": \"str\",  #\
    \ Optional. File unique identifier.\n               \"fileType\": 0,  # Optional.\
    \ Integer representation of the\n                 file type (0 = JMX_FILE, 1 =\
    \ USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS).\n                 Known values are:\
    \ 0, 1, and 2.\n               \"filename\": \"str\",  # Optional. Name of the\
    \ file.\n               \"url\": \"str\",  # Optional. File URL.\n           \
    \    \"validationStatus\": \"str\"  # Optional. Validation status of\n       \
    \          the file.\n           },\n           \"testScriptUrl\": {\n       \
    \        \"expireTime\": \"2020-02-20 00:00:00\",  # Optional. Expiry time\n \
    \                of the file.\n               \"fileId\": \"str\",  # Optional.\
    \ File unique identifier.\n               \"fileType\": 0,  # Optional. Integer\
    \ representation of the\n                 file type (0 = JMX_FILE, 1 = USER_PROPERTIES,\
    \ 2 = ADDITIONAL_ARTIFACTS).\n                 Known values are: 0, 1, and 2.\n\
    \               \"filename\": \"str\",  # Optional. Name of the file.\n      \
    \         \"url\": \"str\",  # Optional. File URL.\n               \"validationStatus\"\
    : \"str\"  # Optional. Validation status of\n                 the file.\n    \
    \       },\n           \"userPropUrl\": {\n               \"expireTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Expiry time\n                 of the file.\n      \
    \         \"fileId\": \"str\",  # Optional. File unique identifier.\n        \
    \       \"fileType\": 0,  # Optional. Integer representation of the\n        \
    \         file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS).\n\
    \                 Known values are: 0, 1, and 2.\n               \"filename\"\
    : \"str\",  # Optional. Name of the file.\n               \"url\": \"str\",  #\
    \ Optional. File URL.\n               \"validationStatus\": \"str\"  # Optional.\
    \ Validation status of\n                 the file.\n           }\n       },\n\
    \       \"keyvaultReferenceIdentityId\": \"str\",  # Optional. Resource Id of\
    \ the managed\n         identity referencing the Key vault.\n       \"keyvaultReferenceIdentityType\"\
    : \"str\",  # Optional. Type of the managed\n         identity referencing the\
    \ Key vault.\n       \"lastModifiedBy\": \"str\",  # Optional. The user that last\
    \ modified the test\n         model.\n       \"lastModifiedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. The last Modified\n         DateTime(ISO 8601 literal\
    \ format) of the test model.\n       \"loadTestConfig\": {\n           \"engineInstances\"\
    : 0,  # Optional. The number of engine instances to\n             execute load\
    \ test. Supported values are in range of 1-45. Required for\n             creating\
    \ a new test.\n           \"splitAllCSVs\": bool  # Optional. Whether all the\
    \ input CSV files\n             should be split evenly across all engines.\n \
    \      },\n       \"passFailCriteria\": {\n           \"passFailMetrics\": {\n\
    \               \"str\": {\n                   \"action\": \"str\",  # Optional.\
    \ Either \"u2018stop\"u2019\n                     or \"u2018continue\"u2019 after\
    \ the threshold is met. Default is\n                     \"u2018continue\"u2019.\n\
    \                   \"actualValue\": 0.0,  # Optional. The actual value of\n \
    \                    the client metric for the test run.\n                   \"\
    aggregate\": \"str\",  # Optional. The aggregation\n                     function\
    \ to be applied on the client metric. Allowed functions -\n                  \
    \   \"u2018percentage\"u2019 - for error metric ,\"u2018avg\"u2019,\n        \
    \             \"u2018p50\"u2019, \"u2018p90\"u2019, \"u2018p95\"u2019, \"u2018p99\"\
    u2019,\n                     \"u2018min\"u2019, \"u2018max\"u2019 - for response_time_ms\
    \ and latency\n                     metric, \"u2018avg\"u2019 - for requests_per_sec,\
    \ \"u2018count\"u2019 -\n                     for requests.\n                \
    \   \"clientmetric\": \"str\",  # Optional. The client metric\n              \
    \       on which the criteria should be applied. Allowed values -\n          \
    \           \"u2018response_time_ms\"u2019 , \"u2018latency\"u2019,\n        \
    \             \"u2018error\"u2019, \"u2018requests\"u2019,\n                 \
    \    \"u2018requests_per_sec\"u2019.\n                   \"condition\": \"str\"\
    ,  # Optional. The comparison\n                     operator. Supported types\
    \ \"u2018>\"u2019.\n                   \"requestName\": \"str\",  # Optional.\
    \ Request name for\n                     which the Pass fail criteria has to be\
    \ applied.\n                   \"result\": \"str\",  # Optional. Outcome of the\
    \ test\n                     run. possible outcome - \"u2018passed\"u2019 , \"\
    u2018failed\"u2019 ,\n                     \"u2018undetermined\"u2019.\n     \
    \              \"value\": 0.0  # Optional. The value to compare with\n       \
    \              the client metric. Allowed values - \"u2018error : [0.0 , 100.0]\
    \ unit-\n                     % \"u2019, response_time_ms and latency : any integer\
    \ value unit- ms.\n               }\n           }\n       },\n       \"resourceId\"\
    : \"str\",  # Optional. Fully qualified resource Id e.g\n         /subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}.\n\
    \       \"secrets\": {\n           \"str\": {\n               \"type\": \"str\"\
    ,  # Optional. Type of secret. eg.\n                 AKV_SECRET_URI/SECRET_VALUE.\n\
    \               \"value\": \"str\"  # Optional. The value of the secret, of type\n\
    \                 AKV_SECRET_URI or SECRET_VALUE.\n           }\n       },\n \
    \      \"subnetId\": \"str\",  # Optional. Subnet ID on which the load test instances\n\
    \         should run.\n       \"testId\": \"str\"  # Optional. Unique test name\
    \ as identifier.\n   }\n   ````\n"
- uid: azure.developer.loadtesting.operations.TestOperations.get_test_file
  name: get_test_file
  summary: 'Get test file by the file name.


    Get test file by the file name.'
  signature: 'get_test_file(test_id: str, file_id: str, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: test_id
    description: 'Unique name for load test, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: file_id
    description: 'Unique identifier for test file, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"expireTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Expiry time of the file.\n       \"fileId\"\
    : \"str\",  # Optional. File unique identifier.\n       \"fileType\": 0,  # Optional.\
    \ Integer representation of the file type (0 =\n         JMX_FILE, 1 = USER_PROPERTIES,\
    \ 2 = ADDITIONAL_ARTIFACTS). Known values are: 0, 1,\n         and 2.\n      \
    \ \"filename\": \"str\",  # Optional. Name of the file.\n       \"url\": \"str\"\
    ,  # Optional. File URL.\n       \"validationStatus\": \"str\"  # Optional. Validation\
    \ status of the file.\n   }\n   ````\n"
- uid: azure.developer.loadtesting.operations.TestOperations.list_load_test_search
  name: list_load_test_search
  summary: 'Get all load tests by the fully qualified resource Id e.g

    subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}.


    Get all load tests by the fully qualified resource Id e.g

    subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}.'
  signature: 'list_load_test_search(*, order_by: str | None = None, search: str |
    None = None, last_updated_start_time: datetime | None = None, last_updated_end_time:
    datetime | None = None, continuation_token_parameter: str | None = None, max_page_size:
    int = 50, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: order_by
    description: 'Sort on one of the field - lastModifiedDateTime, displayName, createdBy
      in

      (field asc/desc) format. eg: displayName asc. Default value is None.'
    types:
    - <xref:str>
  - name: search
    description: 'Filter search based on searchable fields - testId, createdBy. Default
      value is

      None.'
    types:
    - <xref:str>
  - name: last_updated_start_time
    description: 'Start DateTime(ISO 8601 literal format) of the last updated

      time range to filter tests. Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: last_updated_end_time
    description: 'End DateTime(ISO 8601 literal format) of the last updated time

      range to filter tests. Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: continuation_token_parameter
    description: 'Continuation token to get the next page of response.

      Default value is None.'
    types:
    - <xref:str>
  - name: max_page_size
    description: Number of results in response. Default value is 50.
    types:
    - <xref:int>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"value\"\
    : [\n           {\n               \"createdBy\": \"str\",  # Optional. The user\
    \ that created the\n                 test model.\n               \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. The\n                 created DateTime(ISO\
    \ 8601 literal format) of the test model.\n               \"description\": \"\
    str\",  # Optional. The test description.\n               \"displayName\": \"\
    str\",  # Optional. Display name of a test.\n               \"environmentVariables\"\
    : {\n                   \"str\": \"str\"  # Optional. Environment variables which\n\
    \                     are defined as a set of <name,value> pairs.\n          \
    \     },\n               \"inputArtifacts\": {\n                   \"additionalUrls\"\
    : [\n                       {\n                           \"expireTime\": \"2020-02-20\
    \ 00:00:00\",\n                             # Optional. Expiry time of the file.\n\
    \                           \"fileId\": \"str\",  # Optional. File\n         \
    \                    unique identifier.\n                           \"fileType\"\
    : 0,  # Optional. Integer\n                             representation of the\
    \ file type (0 = JMX_FILE, 1 =\n                             USER_PROPERTIES,\
    \ 2 = ADDITIONAL_ARTIFACTS). Known values are:\n                             0,\
    \ 1, and 2.\n                           \"filename\": \"str\",  # Optional. Name\n\
    \                             of the file.\n                           \"url\"\
    : \"str\",  # Optional. File URL.\n                           \"validationStatus\"\
    : \"str\"  #\n                             Optional. Validation status of the\
    \ file.\n                       }\n                   ],\n                   \"\
    configUrl\": {\n                       \"expireTime\": \"2020-02-20 00:00:00\"\
    ,  #\n                         Optional. Expiry time of the file.\n          \
    \             \"fileId\": \"str\",  # Optional. File unique\n                \
    \         identifier.\n                       \"fileType\": 0,  # Optional. Integer\n\
    \                         representation of the file type (0 = JMX_FILE, 1 =\n\
    \                         USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS). Known values\
    \ are: 0,\n                         1, and 2.\n                       \"filename\"\
    : \"str\",  # Optional. Name of the\n                         file.\n        \
    \               \"url\": \"str\",  # Optional. File URL.\n                   \
    \    \"validationStatus\": \"str\"  # Optional.\n                         Validation\
    \ status of the file.\n                   },\n                   \"inputArtifactsZipFileurl\"\
    : {\n                       \"expireTime\": \"2020-02-20 00:00:00\",  #\n    \
    \                     Optional. Expiry time of the file.\n                   \
    \    \"fileId\": \"str\",  # Optional. File unique\n                         identifier.\n\
    \                       \"fileType\": 0,  # Optional. Integer\n              \
    \           representation of the file type (0 = JMX_FILE, 1 =\n             \
    \            USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS). Known values are: 0,\n\
    \                         1, and 2.\n                       \"filename\": \"str\"\
    ,  # Optional. Name of the\n                         file.\n                 \
    \      \"url\": \"str\",  # Optional. File URL.\n                       \"validationStatus\"\
    : \"str\"  # Optional.\n                         Validation status of the file.\n\
    \                   },\n                   \"testScriptUrl\": {\n            \
    \           \"expireTime\": \"2020-02-20 00:00:00\",  #\n                    \
    \     Optional. Expiry time of the file.\n                       \"fileId\": \"\
    str\",  # Optional. File unique\n                         identifier.\n      \
    \                 \"fileType\": 0,  # Optional. Integer\n                    \
    \     representation of the file type (0 = JMX_FILE, 1 =\n                   \
    \      USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS). Known values are: 0,\n    \
    \                     1, and 2.\n                       \"filename\": \"str\"\
    ,  # Optional. Name of the\n                         file.\n                 \
    \      \"url\": \"str\",  # Optional. File URL.\n                       \"validationStatus\"\
    : \"str\"  # Optional.\n                         Validation status of the file.\n\
    \                   },\n                   \"userPropUrl\": {\n              \
    \         \"expireTime\": \"2020-02-20 00:00:00\",  #\n                      \
    \   Optional. Expiry time of the file.\n                       \"fileId\": \"\
    str\",  # Optional. File unique\n                         identifier.\n      \
    \                 \"fileType\": 0,  # Optional. Integer\n                    \
    \     representation of the file type (0 = JMX_FILE, 1 =\n                   \
    \      USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS). Known values are: 0,\n    \
    \                     1, and 2.\n                       \"filename\": \"str\"\
    ,  # Optional. Name of the\n                         file.\n                 \
    \      \"url\": \"str\",  # Optional. File URL.\n                       \"validationStatus\"\
    : \"str\"  # Optional.\n                         Validation status of the file.\n\
    \                   }\n               },\n               \"keyvaultReferenceIdentityId\"\
    : \"str\",  # Optional. Resource\n                 Id of the managed identity\
    \ referencing the Key vault.\n               \"keyvaultReferenceIdentityType\"\
    : \"str\",  # Optional. Type of\n                 the managed identity referencing\
    \ the Key vault.\n               \"lastModifiedBy\": \"str\",  # Optional. The\
    \ user that last\n                 modified the test model.\n               \"\
    lastModifiedDateTime\": \"2020-02-20 00:00:00\",  # Optional.\n              \
    \   The last Modified DateTime(ISO 8601 literal format) of the test model.\n \
    \              \"loadTestConfig\": {\n                   \"engineInstances\":\
    \ 0,  # Optional. The number of\n                     engine instances to execute\
    \ load test. Supported values are in range\n                     of 1-45. Required\
    \ for creating a new test.\n                   \"splitAllCSVs\": bool  # Optional.\
    \ Whether all the\n                     input CSV files should be split evenly\
    \ across all engines.\n               },\n               \"passFailCriteria\"\
    : {\n                   \"passFailMetrics\": {\n                       \"str\"\
    : {\n                           \"action\": \"str\",  # Optional. Either\n   \
    \                          \"u2018stop\"u2019 or \"u2018continue\"u2019 after\
    \ the threshold\n                             is met. Default is \"u2018continue\"\
    u2019.\n                           \"actualValue\": 0.0,  # Optional. The\n  \
    \                           actual value of the client metric for the test run.\n\
    \                           \"aggregate\": \"str\",  # Optional. The\n       \
    \                      aggregation function to be applied on the client metric.\n\
    \                             Allowed functions - \"u2018percentage\"u2019 - for\
    \ error metric\n                             ,\"u2018avg\"u2019, \"u2018p50\"\
    u2019, \"u2018p90\"u2019,\n                             \"u2018p95\"u2019, \"\
    u2018p99\"u2019, \"u2018min\"u2019,\n                             \"u2018max\"\
    u2019 - for response_time_ms and latency metric,\n                           \
    \  \"u2018avg\"u2019 - for requests_per_sec, \"u2018count\"u2019 -\n         \
    \                    for requests.\n                           \"clientmetric\"\
    : \"str\",  # Optional.\n                             The client metric on which\
    \ the criteria should be applied.\n                             Allowed values\
    \ - \"u2018response_time_ms\"u2019 ,\n                             \"u2018latency\"\
    u2019, \"u2018error\"u2019, \"u2018requests\"u2019,\n                        \
    \     \"u2018requests_per_sec\"u2019.\n                           \"condition\"\
    : \"str\",  # Optional. The\n                             comparison operator.\
    \ Supported types \"u2018>\"u2019.\n                           \"requestName\"\
    : \"str\",  # Optional.\n                             Request name for which the\
    \ Pass fail criteria has to be\n                             applied.\n      \
    \                     \"result\": \"str\",  # Optional. Outcome\n            \
    \                 of the test run. possible outcome - \"u2018passed\"u2019 ,\n\
    \                             \"u2018failed\"u2019 , \"u2018undetermined\"u2019.\n\
    \                           \"value\": 0.0  # Optional. The value\n          \
    \                   to compare with the client metric. Allowed values -\n    \
    \                         \"u2018error : [0.0 , 100.0] unit- % \"u2019, response_time_ms\n\
    \                             and latency : any integer value unit- ms.\n    \
    \                   }\n                   }\n               },\n             \
    \  \"resourceId\": \"str\",  # Optional. Fully qualified resource Id\n       \
    \          e.g\n                 /subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}.\n\
    \               \"secrets\": {\n                   \"str\": {\n              \
    \         \"type\": \"str\",  # Optional. Type of secret.\n                  \
    \       eg. AKV_SECRET_URI/SECRET_VALUE.\n                       \"value\": \"\
    str\"  # Optional. The value of the\n                         secret, of type\
    \ AKV_SECRET_URI or SECRET_VALUE.\n                   }\n               },\n \
    \              \"subnetId\": \"str\",  # Optional. Subnet ID on which the load\n\
    \                 test instances should run.\n               \"testId\": \"str\"\
    \  # Optional. Unique test name as identifier.\n           }\n       ],\n    \
    \   \"nextLink\": \"str\"  # Optional. Link for the next list of resources in\
    \ case of\n         paginated results, if applicable.\n   }\n   ````\n"
- uid: azure.developer.loadtesting.operations.TestOperations.list_test_files
  name: list_test_files
  summary: 'Get all test files.


    Get all test files.'
  signature: 'list_test_files(test_id: str, *, continuation_token_parameter: str |
    None = None, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: test_id
    description: 'Unique name for load test, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: continuation_token_parameter
    description: 'Continuation token to get the next page of response.

      Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"value\"\
    : [\n           {\n               \"expireTime\": \"2020-02-20 00:00:00\",  #\
    \ Optional. Expiry time\n                 of the file.\n               \"fileId\"\
    : \"str\",  # Optional. File unique identifier.\n               \"fileType\":\
    \ 0,  # Optional. Integer representation of the\n                 file type (0\
    \ = JMX_FILE, 1 = USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS).\n              \
    \   Known values are: 0, 1, and 2.\n               \"filename\": \"str\",  # Optional.\
    \ Name of the file.\n               \"url\": \"str\",  # Optional. File URL.\n\
    \               \"validationStatus\": \"str\"  # Optional. Validation status of\n\
    \                 the file.\n           }\n       ],\n       \"nextLink\": \"\
    str\"  # Optional. Link for the next list of file URLs, if\n         applicable.\n\
    \   }\n   ````\n"
- uid: azure.developer.loadtesting.operations.TestOperations.upload_test_file
  name: upload_test_file
  summary: 'Upload test file and link it to a test.


    Upload a test file to an existing test.'
  signature: 'upload_test_file(test_id: str, file_id: str, file: BinaryIO, **kwargs)
    -> MutableMapping[str, Any]'
  parameters:
  - name: test_id
    description: Unique id for the test
    isRequired: true
    types:
    - <xref:str>
  - name: file_id
    description: Unique id for the file
    isRequired: true
    types:
    - <xref:str>
  - name: file_content
    description: dictionary containing file contet
    isRequired: true
  - name: file
    isRequired: true
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
