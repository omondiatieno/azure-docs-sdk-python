### YamlMime:PythonClass
uid: azure.ai.language.conversations.aio.ConversationAnalysisClient
name: ConversationAnalysisClient
fullName: azure.ai.language.conversations.aio.ConversationAnalysisClient
module: azure.ai.language.conversations.aio
inheritances:
- azure.ai.language.conversations.aio._client.ConversationAnalysisClient
summary: 'The language service conversations API is a suite of natural language processing
  (NLP) skills

  that can be used to analyze structured conversations (textual or spoken). The synchronous
  API

  in this suite accepts a request and mediates among multiple language projects, such
  as LUIS

  Generally Available, Question Answering, Conversational Language Understanding,
  and then calls

  the best candidate service to handle the request. At last, it returns a response
  with the

  candidate service''s response as a payload.


  See [https://docs.microsoft.com/rest/api/language/conversation-analysis-runtime/](https://docs.microsoft.com/rest/api/language/conversation-analysis-runtime/)
  for more information about

  requests and responses you can pass to this client.'
constructor:
  syntax: 'ConversationAnalysisClient(endpoint: str, credential: AzureKeyCredential
    | AsyncTokenCredential, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'Supported Cognitive Services endpoint (e.g.,

      [https://](https://)`<resource-name>`.cognitiveservices.azure.com). Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'Credential needed for the client to connect to Azure.

      This can be the an instance of AzureKeyCredential if using a Language API key

      or a token credential from <xref:azure.identity>.'
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  - name: api_version
    description: 'Api Version. Available values are "2022-10-01-preview", "2022-05-15-preview",

      "2022-05-01". Default value is "2022-10-01-preview". Note that overriding this
      default value may result in

      unsupported behavior.'
    types:
    - <xref:str>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
methods:
- uid: azure.ai.language.conversations.aio.ConversationAnalysisClient.analyze_conversation
  name: analyze_conversation
  summary: 'Analyzes the input conversation utterance.


    See

    [https://learn.microsoft.com/rest/api/language/2022-10-01-preview/conversation-analysis/analyze-conversation](https://learn.microsoft.com/rest/api/language/2022-10-01-preview/conversation-analysis/analyze-conversation)

    for more information.'
  signature: 'async analyze_conversation(task: MutableMapping[str, Any] | IO, **kwargs:
    Any) -> MutableMapping[str, Any]'
  parameters:
  - name: task
    description: 'A single conversational task to execute. Is either a model type
      or a IO type.

      Required.'
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:IO>
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # The response is polymorphic. The following are possible polymorphic responses\
    \ based\n     off discriminator \"kind\":\n\n   # JSON input template for discriminator\
    \ value \"ConversationResult\":\n   analyze_conversation_task_result = {\n   \
    \    \"kind\": \"ConversationResult\",\n       \"result\": {\n           \"prediction\"\
    : base_prediction,\n           \"query\": \"str\",  # The conversation utterance\
    \ given by the caller.\n             Required.\n           \"detectedLanguage\"\
    : \"str\"  # Optional. The system detected language\n             for the query\
    \ in BCP 47 language representation..\n       }\n   }\n\n   # JSON input template\
    \ for discriminator value \"Conversation\":\n   base_prediction = {\n       \"\
    entities\": [\n           {\n               \"category\": \"str\",  # The entity\
    \ category. Required.\n               \"confidenceScore\": 0.0,  # The entity\
    \ confidence score.\n                 Required.\n               \"length\": 0,\
    \  # The length of the text. Required.\n               \"offset\": 0,  # The starting\
    \ index of this entity in the\n                 query. Required.\n           \
    \    \"text\": \"str\",  # The predicted entity text. Required.\n            \
    \   \"extraInformation\": [\n                   base_extra_information\n     \
    \          ],\n               \"resolutions\": [\n                   base_resolution\n\
    \               ]\n           }\n       ],\n       \"intents\": [\n          \
    \ {\n               \"category\": \"str\",  # A predicted class. Required.\n \
    \              \"confidenceScore\": 0.0  # The confidence score of the class\n\
    \                 from 0.0 to 1.0. Required.\n           }\n       ],\n      \
    \ \"projectKind\": \"Conversation\",\n       \"topIntent\": \"str\"  # Optional.\
    \ The intent with the highest score.\n   }\n\n   # JSON input template for discriminator\
    \ value \"Orchestration\":\n   base_prediction = {\n       \"intents\": {\n  \
    \         \"str\": target_intent_result\n       },\n       \"projectKind\": \"\
    Orchestration\",\n       \"topIntent\": \"str\"  # Optional. The intent with the\
    \ highest score.\n   }\n\n   # response body for status code(s): 200\n   response\
    \ == analyze_conversation_task_result\n   ````\n"
- uid: azure.ai.language.conversations.aio.ConversationAnalysisClient.begin_conversation_analysis
  name: begin_conversation_analysis
  summary: 'Submit analysis job for conversations.


    Submit a collection of conversations for analysis. Specify one or more unique
    tasks to be

    executed.


    See

    [https://learn.microsoft.com/rest/api/language/2022-10-01-preview/conversation-analysis-runtime/submit-job](https://learn.microsoft.com/rest/api/language/2022-10-01-preview/conversation-analysis-runtime/submit-job)

    for more information.'
  signature: 'async begin_conversation_analysis(task: MutableMapping[str, Any] | IO,
    **kwargs: Any) -> AsyncLROPoller[MutableMapping[str, Any]]'
  parameters:
  - name: task
    description: 'The collection of conversations to analyze and one or more tasks
      to execute. Is

      either a model type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:IO>
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Required.\n       \"jobId\": \"str\",  # Required.\n\
    \       \"lastUpdatedDateTime\": \"2020-02-20 00:00:00\",  # Required.\n     \
    \  \"status\": \"str\",  # The status of the task at the mentioned last update\
    \ time.\n         Required. Known values are: \"notStarted\", \"running\", \"\
    succeeded\", \"failed\",\n         \"cancelled\", \"cancelling\", and \"partiallyCompleted\"\
    .\n       \"tasks\": {\n           \"completed\": 0,  # Count of tasks completed\
    \ successfully. Required.\n           \"failed\": 0,  # Count of tasks that failed.\
    \ Required.\n           \"inProgress\": 0,  # Count of tasks in progress currently.\
    \ Required.\n           \"total\": 0,  # Total count of tasks submitted as part\
    \ of the job.\n             Required.\n           \"items\": [\n             \
    \  analyze_conversation_job_result\n           ]\n       },\n       \"displayName\"\
    : \"str\",  # Optional.\n       \"errors\": [\n           {\n               \"\
    code\": \"str\",  # One of a server-defined set of error codes.\n            \
    \     Required. Known values are: \"InvalidRequest\", \"InvalidArgument\",\n \
    \                \"Unauthorized\", \"Forbidden\", \"NotFound\", \"ProjectNotFound\"\
    ,\n                 \"OperationNotFound\", \"AzureCognitiveSearchNotFound\",\n\
    \                 \"AzureCognitiveSearchIndexNotFound\", \"TooManyRequests\",\n\
    \                 \"AzureCognitiveSearchThrottling\",\n                 \"AzureCognitiveSearchIndexLimitReached\"\
    , \"InternalServerError\",\n                 \"ServiceUnavailable\", \"Timeout\"\
    , \"QuotaExceeded\", \"Conflict\", and\n                 \"Warning\".\n      \
    \         \"message\": \"str\",  # A human-readable representation of the\n  \
    \               error. Required.\n               \"details\": [\n            \
    \       ...\n               ],\n               \"innererror\": {\n           \
    \        \"code\": \"str\",  # One of a server-defined set of\n              \
    \       error codes. Required. Known values are: \"InvalidRequest\",\n       \
    \              \"InvalidParameterValue\", \"KnowledgeBaseNotFound\",\n       \
    \              \"AzureCognitiveSearchNotFound\", \"AzureCognitiveSearchThrottling\"\
    ,\n                     \"ExtractionFailure\", \"InvalidRequestBodyFormat\", \"\
    EmptyRequest\",\n                     \"MissingInputDocuments\", \"InvalidDocument\"\
    , \"ModelVersionIncorrect\",\n                     \"InvalidDocumentBatch\", \"\
    UnsupportedLanguageCode\", and\n                     \"InvalidCountryHint\".\n\
    \                   \"message\": \"str\",  # Error message. Required.\n      \
    \             \"details\": {\n                       \"str\": \"str\"  # Optional.\
    \ Error details.\n                   },\n                   \"innererror\": ...,\n\
    \                   \"target\": \"str\"  # Optional. Error target.\n         \
    \      },\n               \"target\": \"str\"  # Optional. The target of the error.\n\
    \           }\n       ],\n       \"expirationDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional.\n       \"nextLink\": \"str\",  # Optional.\n       \"statistics\"\
    : {\n           \"conversationsCount\": 0,  # Number of conversations submitted\
    \ in the\n             request. Required.\n           \"documentsCount\": 0, \
    \ # Number of documents submitted in the request.\n             Required.\n  \
    \         \"erroneousConversationsCount\": 0,  # Number of invalid documents.\n\
    \             This includes empty, over-size limit or non-supported languages\
    \ documents.\n             Required.\n           \"erroneousDocumentsCount\":\
    \ 0,  # Number of invalid documents. This\n             includes empty, over-size\
    \ limit or non-supported languages documents.\n             Required.\n      \
    \     \"transactionsCount\": 0,  # Number of transactions for the request.\n \
    \            Required.\n           \"validConversationsCount\": 0,  # Number of\
    \ conversations documents.\n             This excludes empty, over-size limit\
    \ or non-supported languages documents.\n             Required.\n           \"\
    validDocumentsCount\": 0  # Number of valid documents. This excludes\n       \
    \      empty, over-size limit or non-supported languages documents. Required.\n\
    \       }\n   }\n   ````\n"
- uid: azure.ai.language.conversations.aio.ConversationAnalysisClient.close
  name: close
  signature: async close() -> None
- uid: azure.ai.language.conversations.aio.ConversationAnalysisClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, **kwargs: Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
