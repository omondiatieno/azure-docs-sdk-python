### YamlMime:PythonClass
uid: azure.iot.hub.protocol.models.twin_py3.Twin
name: Twin
fullName: azure.iot.hub.protocol.models.twin_py3.Twin
module: azure.iot.hub.protocol.models.twin_py3
inheritances:
- msrest.serialization.Model
summary: Twin Representation.
constructor:
  syntax: 'Twin(*, device_id: str = None, module_id: str = None, tags=None, properties=None,
    etag: str = None, version: int = None, device_etag: str = None, status=None, status_reason:
    str = None, status_update_time=None, connection_state=None, last_activity_time=None,
    cloud_to_device_message_count: int = None, authentication_type=None, x509_thumbprint=None,
    capabilities=None, device_scope: str = None, parent_scopes=None, **kwargs)'
  parameters:
  - name: device_id
    description: 'The deviceId uniquely identifies the device in the IoT

      hub''s identity registry. A case-sensitive string (up to 128 char long) of

      ASCII 7-bit alphanumeric chars + {''-'', '':'', ''.'', ''+'', ''%'', ''_'',
      ''#'', ''*'',

      ''?'', ''!'', ''('', '')'', '','', ''='', ''@'', '';'', ''$'', ''''''}.'
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: Gets and sets the Module Id.
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: 'A JSON document read and written by the solution back end.

      Tags are not visible to device apps.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:object>]
  - name: properties
    description: Gets and sets the Twin properties.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.TwinProperties>
  - name: etag
    description: Twin's ETag
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: 'Version for device twin, including tags and desired

      properties'
    isRequired: true
    types:
    - <xref:long>
  - name: device_etag
    description: Device's ETag
    isRequired: true
    types:
    - <xref:str>
  - name: status
    description: 'Gets the corresponding Device''s Status. Possible values

      include: ''enabled'', ''disabled'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:protocol.models.enum>
  - name: status_reason
    description: 'Reason, if any, for the corresponding Device to be

      in specified Status'
    isRequired: true
    types:
    - <xref:str>
  - name: status_update_time
    description: 'Time when the corresponding Device''s Status was

      last updated'
    isRequired: true
    types:
    - <xref:datetime>
  - name: connection_state
    description: 'Corresponding Device''s ConnectionState. Possible

      values include: ''Disconnected'', ''Connected'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:protocol.models.enum>
  - name: last_activity_time
    description: 'The last time the device connected, received or

      sent a message. In ISO8601 datetime format in UTC, for example,

      2015-01-28T16:24:48.789Z. This does not update if the device uses the

      HTTP/1 protocol to perform messaging operations.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: cloud_to_device_message_count
    description: 'Number of messages sent to the

      corresponding Device from the Cloud'
    isRequired: true
    types:
    - <xref:int>
  - name: authentication_type
    description: 'Corresponding Device''s authentication type.

      Possible values include: ''sas'', ''selfSigned'', ''certificateAuthority'',

      ''none'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:protocol.models.enum>
  - name: x509_thumbprint
    description: Corresponding Device's X509 thumbprint
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.X509Thumbprint>
  - name: capabilities
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.DeviceCapabilities>
  - name: device_scope
    isRequired: true
    types:
    - <xref:str>
  - name: parent_scopes
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
methods:
- uid: azure.iot.hub.protocol.models.twin_py3.Twin.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.iot.hub.protocol.models.twin_py3.Twin.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.iot.hub.protocol.models.twin_py3.Twin.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.iot.hub.protocol.models.twin_py3.Twin.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.iot.hub.protocol.models.twin_py3.Twin.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.iot.hub.protocol.models.twin_py3.Twin.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.iot.hub.protocol.models.twin_py3.Twin.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
