### YamlMime:PythonClass
uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient
name: QuestionAnsweringProjectsClient
fullName: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient
module: azure.ai.language.questionanswering.projects
inheritances:
- azure.ai.language.questionanswering.projects._question_answering_projects_client.QuestionAnsweringProjectsClient
summary: 'The language service API is a suite of natural language processing (NLP)
  skills built with

  best-in-class Microsoft machine learning algorithms.  The API can be used to analyze

  unstructured text for tasks such as sentiment analysis, key phrase extraction, language

  detection and question answering. Further documentation can be found in `<a

  href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview">https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview</a>`.'
constructor:
  syntax: 'QuestionAnsweringProjectsClient(endpoint: str, credential: AzureKeyCredential
    | TokenCredential, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'Supported Cognitive Services endpoint (e.g.,

      [https://](https://)`<resource-name>`.api.cognitiveservices.azure.com).'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'Credential needed for the client to connect to Azure.

      This can be the an instance of AzureKeyCredential if using a Language API key

      or a token credential from <xref:azure.identity>.'
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials.TokenCredential>
  - name: api_version
    description: 'Api Version. The default value is "2021-10-01". Note that overriding
      this

      default value may result in unsupported behavior.'
    types:
    - <xref:str>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
methods:
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.add_feedback
  name: add_feedback
  summary: 'Update Active Learning feedback.


    Update Active Learning feedback.'
  signature: 'add_feedback(project_name: str, feedback: JSONType, **kwargs: Any) ->
    None'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: feedback
    description: Feedback for Active Learning.
    isRequired: true
    types:
    - <xref:JSONType>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # JSON input template you can fill out and use as your body input.\n   feedback\
    \ = {\n       \"records\": [\n           {\n               \"qnaId\": 0,  # Optional.\
    \ Unique ID of the QnA.\n               \"userId\": \"str\",  # Optional. Unique\
    \ identifier of the user.\n               \"userQuestion\": \"str\"  # Optional.\
    \ User suggested question\n                 for the QnA.\n           }\n     \
    \  ]\n   }\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.begin_delete_project
  name: begin_delete_project
  summary: 'Delete the project.


    Delete the project.'
  signature: 'begin_delete_project(project_name: str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be LROBasePolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns None
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.begin_deploy_project
  name: begin_deploy_project
  summary: 'Deploy project to production.


    Deploy project to production.'
  signature: 'begin_deploy_project(project_name: str, deployment_name: str, **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of the specific deployment of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be LROBasePolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns None
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.begin_export
  name: begin_export
  summary: 'Export project metadata and assets.


    Export project metadata and assets.'
  signature: 'begin_export(project_name: str, **kwargs: Any) -> LROPoller[JSONType]'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: format
    description: 'Knowledge base Import or Export format. Possible values are: "json",
      "tsv",

      and "excel".'
    types:
    - <xref:str>
  - name: asset_kind
    description: 'Kind of the asset of the project. Possible values are: "qnas" or

      "synonyms".'
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be LROBasePolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:JSONType>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response.json() == {\n       \"\
    createdDateTime\": \"2020-02-20 00:00:00\",  # Required.\n       \"errors\": [\n\
    \           {\n               \"code\": \"str\",  # Required. One of a server-defined\
    \ set of\n                 error codes. Possible values include: \"InvalidRequest\"\
    ,\n                 \"InvalidArgument\", \"Unauthorized\", \"Forbidden\", \"NotFound\"\
    ,\n                 \"ProjectNotFound\", \"OperationNotFound\", \"AzureCognitiveSearchNotFound\"\
    ,\n                 \"AzureCognitiveSearchIndexNotFound\", \"TooManyRequests\"\
    ,\n                 \"AzureCognitiveSearchThrottling\",\n                 \"AzureCognitiveSearchIndexLimitReached\"\
    , \"InternalServerError\",\n                 \"ServiceUnavailable\".\n       \
    \        \"details\": [\n                   ...\n               ],\n         \
    \      \"innererror\": {\n                   \"code\": \"str\",  # Required. One\
    \ of a server-defined\n                     set of error codes. Possible values\
    \ include: \"InvalidRequest\",\n                     \"InvalidParameterValue\"\
    , \"KnowledgeBaseNotFound\",\n                     \"AzureCognitiveSearchNotFound\"\
    , \"AzureCognitiveSearchThrottling\",\n                     \"ExtractionFailure\"\
    .\n                   \"details\": {\n                       \"str\": \"str\"\
    \  # Optional. Error details.\n                   },\n                   \"innererror\"\
    : ...,\n                   \"message\": \"str\",  # Required. Error message.\n\
    \                   \"target\": \"str\"  # Optional. Error target.\n         \
    \      },\n               \"message\": \"str\",  # Required. A human-readable\n\
    \                 representation of the error.\n               \"target\": \"\
    str\"  # Optional. The target of the error.\n           }\n       ],\n       \"\
    expirationDateTime\": \"2020-02-20 00:00:00\",  # Optional.\n       \"jobId\"\
    : \"str\",  # Required.\n       \"lastUpdatedDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Required.\n       \"resultUrl\": \"str\",  # Required. URL to download the\
    \ result of the Export\n         Job.\n       \"status\": \"str\"  # Required.\
    \ Job Status. Possible values include:\n         \"notStarted\", \"running\",\
    \ \"succeeded\", \"failed\", \"cancelled\", \"cancelling\",\n         \"partiallyCompleted\"\
    .\n   }\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.begin_import_assets
  name: begin_import_assets
  summary: 'Import project assets.


    Import project assets.'
  signature: 'begin_import_assets(project_name: str, options: JSONType = None, **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: options
    description: Project assets the needs to be imported.
    isRequired: true
    types:
    - <xref:JSONType>
  - name: format
    description: 'Knowledge base Import or Export format. Possible values are: "json",
      "tsv",

      and "excel".'
    types:
    - <xref:str>
  - name: asset_kind
    description: 'Kind of the asset of the project. Possible values are: "qnas" or

      "synonyms".'
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be LROBasePolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns None
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # JSON input template you can fill out and use as your body input.\n   options\
    \ = {\n       \"assets\": {\n           \"qnas\": [\n               {\n      \
    \             \"activeLearningSuggestions\": [\n                       {\n   \
    \                        \"clusterHead\": \"str\",  # Optional.\n            \
    \                 Question chosen as the head of suggested questions cluster by\n\
    \                             Active Learning clustering algorithm.\n        \
    \                   \"suggestedQuestions\": [\n                              \
    \ {\n                                   \"autoSuggestedCount\":\n            \
    \                         0,  # Optional. The number of times the question was\n\
    \                                     suggested automatically by the Active Learning\n\
    \                                     algorithm.\n                           \
    \        \"question\": \"str\",  #\n                                     Optional.\
    \ Question suggested by the Active Learning\n                                \
    \     feature.\n                                   \"userSuggestedCount\":\n \
    \                                    0  # Optional. The number of times the question\
    \ was\n                                     suggested explicitly by the user.\n\
    \                               }\n                           ]\n            \
    \           }\n                   ],\n                   \"answer\": \"str\",\
    \  # Optional. Answer text.\n                   \"dialog\": {\n              \
    \         \"isContextOnly\": bool,  # Optional. To mark\n                    \
    \     if a prompt is relevant only with a previous question or not. If\n     \
    \                    true, do not include this QnA as answer for queries without\n\
    \                         context; otherwise, ignores context and includes this\
    \ QnA in\n                         answers.\n                       \"prompts\"\
    : [\n                           {\n                               \"displayOrder\"\
    : 0,  #\n                                 Optional. Index of the prompt. It is\
    \ used for ordering of\n                                 the prompts.\n      \
    \                         \"displayText\": \"str\",  #\n                     \
    \            Optional. Text displayed to represent a follow up\n             \
    \                    question prompt.\n                               \"qna\"\
    : {\n   \"activeLearningSuggestions\": [\n                                   \
    \    {\n   \"clusterHead\": \"str\",  # Optional. Question\n                 \
    \                            chosen as the head of suggested questions\n     \
    \                                        cluster by Active Learning clustering\n\
    \                                             algorithm.\n   \"suggestedQuestions\"\
    : [\n   {\n   \"autoSuggestedCount\": 0,  # Optional.\n                      \
    \                               The number of times the question was\n       \
    \                                              suggested automatically by the\
    \ Active\n                                                     Learning algorithm.\n\
    \   \"question\": \"str\",  # Optional.\n                                    \
    \                 Question suggested by the Active\n                         \
    \                            Learning feature.\n   \"userSuggestedCount\": 0 \
    \ # Optional.\n                                                     The number\
    \ of times the question was\n                                                \
    \     suggested explicitly by the user.\n   }\n                              \
    \             ]\n                                       }\n                  \
    \                 ],\n                                   \"answer\": \"str\",\
    \  #\n                                     Optional. Answer text.\n          \
    \                         \"dialog\": ...,\n                                 \
    \  \"id\": 0,  # Optional.\n                                     Unique ID for\
    \ the QnA.\n                                   \"metadata\": {\n             \
    \                          \"str\": \"str\"\n                                \
    \         # Optional. Metadata associated with the answer,\n                 \
    \                        useful to categorize or filter question answers.\n  \
    \                                 },\n                                   \"questions\"\
    : [\n                                       \"str\"  #\n                     \
    \                    Optional. List of questions associated with the\n       \
    \                                  answer.\n                                 \
    \  ],\n                                   \"source\": \"str\"  #\n           \
    \                          Optional. Source from which QnA was indexed e.g.\n\
    \                                     https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs\n\
    \                                     .\n                               },\n \
    \                              \"qnaId\": 0  # Optional. ID of\n             \
    \                    the QnA corresponding to the prompt.\n                  \
    \         }\n                       ]\n                   },\n               \
    \    \"id\": 0,  # Optional. Unique ID for the QnA.\n                   \"lastUpdatedDateTime\"\
    : \"2020-02-20 00:00:00\",  #\n                     Optional. Date-time when the\
    \ QnA was last updated.\n                   \"metadata\": {\n                \
    \       \"str\": \"str\"  # Optional. Metadata associated\n                  \
    \       with the answer, useful to categorize or filter question answers.\n  \
    \                 },\n                   \"questions\": [\n                  \
    \     \"str\"  # Optional. List of questions\n                         associated\
    \ with the answer.\n                   ],\n                   \"source\": \"str\"\
    ,  # Optional. Source from which QnA\n                     was indexed e.g.\n\
    \                     https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs\n\
    \                     .\n                   \"sourceDisplayName\": \"str\"  #\
    \ Optional. Friendly name\n                     of the Source.\n             \
    \  }\n           ],\n           \"synonyms\": [\n               {\n          \
    \         \"alterations\": [\n                       \"str\"  # Required. Collection\
    \ of word\n                         alterations.\n                   ]\n     \
    \          }\n           ]\n       },\n       \"fileUri\": \"str\",  # Optional.\
    \ Import data File URI.\n       \"metadata\": {\n           \"description\": \"\
    str\",  # Optional. Description of the project.\n           \"language\": \"str\"\
    ,  # Required. Language of the text records. This is\n             BCP-47 representation\
    \ of a language. For example, use \"en\" for English; \"es\"\n             for\
    \ Spanish etc. If not set, use \"en\" for English as default.\n           \"multilingualResource\"\
    : bool,  # Optional. Set to true to enable\n             creating knowledgebases\
    \ in different languages for the same resource.\n           \"settings\": {\n\
    \               \"defaultAnswer\": \"str\"  # Optional. Default Answer response\n\
    \                 when no good match is found in the knowledge base.\n       \
    \    }\n       }\n   }\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.begin_update_qnas
  name: begin_update_qnas
  summary: 'Updates the QnAs of a project.


    Updates the QnAs of a project.'
  signature: 'begin_update_qnas(project_name: str, qnas: List[JSONType], **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: qnas
    description: Update QnAs parameters of a project.
    isRequired: true
    types:
    - <xref:list>[<xref:JSONType>]
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be LROBasePolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns None
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # JSON input template you can fill out and use as your body input.\n   qnas\
    \ = [\n       {\n           \"op\": \"str\",  # Required. Update operation type\
    \ for assets. Possible\n             values include: \"add\", \"delete\", \"replace\"\
    .\n           \"value\": {\n               \"activeLearningSuggestions\": [\n\
    \                   {\n                       \"clusterHead\": \"str\",  # Optional.\
    \ Question\n                         chosen as the head of suggested questions\
    \ cluster by Active\n                         Learning clustering algorithm.\n\
    \                       \"suggestedQuestions\": [\n                          \
    \ {\n                               \"autoSuggestedCount\": 0,  #\n          \
    \                       Optional. The number of times the question was suggested\n\
    \                                 automatically by the Active Learning algorithm.\n\
    \                               \"question\": \"str\",  #\n                  \
    \               Optional. Question suggested by the Active Learning\n        \
    \                         feature.\n                               \"userSuggestedCount\"\
    : 0  #\n                                 Optional. The number of times the question\
    \ was suggested\n                                 explicitly by the user.\n  \
    \                         }\n                       ]\n                   }\n\
    \               ],\n               \"answer\": \"str\",  # Optional. Answer text.\n\
    \               \"dialog\": {\n                   \"isContextOnly\": bool,  #\
    \ Optional. To mark if a\n                     prompt is relevant only with a\
    \ previous question or not. If true, do\n                     not include this\
    \ QnA as answer for queries without context;\n                     otherwise,\
    \ ignores context and includes this QnA in answers.\n                   \"prompts\"\
    : [\n                       {\n                           \"displayOrder\": 0,\
    \  # Optional. Index\n                             of the prompt. It is used for\
    \ ordering of the prompts.\n                           \"displayText\": \"str\"\
    ,  # Optional.\n                             Text displayed to represent a follow\
    \ up question prompt.\n                           \"qna\": ...,\n            \
    \               \"qnaId\": 0  # Optional. ID of the QnA\n                    \
    \         corresponding to the prompt.\n                       }\n           \
    \        ]\n               },\n               \"id\": 0,  # Optional. Unique ID\
    \ for the QnA.\n               \"metadata\": {\n                   \"str\": \"\
    str\"  # Optional. Metadata associated with\n                     the answer,\
    \ useful to categorize or filter question answers.\n               },\n      \
    \         \"questions\": [\n                   \"str\"  # Optional. List of questions\
    \ associated with\n                     the answer.\n               ],\n     \
    \          \"source\": \"str\"  # Optional. Source from which QnA was\n      \
    \           indexed e.g.\n                 https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs\
    \ .\n           }\n       }\n   ]\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.begin_update_sources
  name: begin_update_sources
  summary: 'Updates the sources of a project.


    Updates the sources of a project.'
  signature: 'begin_update_sources(project_name: str, sources: List[JSONType], **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: sources
    description: Update sources parameters of a project.
    isRequired: true
    types:
    - <xref:list>[<xref:JSONType>]
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be LROBasePolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns None
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # JSON input template you can fill out and use as your body input.\n   sources\
    \ = [\n       {\n           \"op\": \"str\",  # Required. Update operation type\
    \ for assets. Possible\n             values include: \"add\", \"delete\", \"replace\"\
    .\n           \"value\": {\n               \"contentStructureKind\": \"unstructured\"\
    ,  # Optional. Default\n                 value is \"unstructured\". Content structure\
    \ type for sources. Possible\n                 values include: \"unstructured\"\
    .\n               \"displayName\": \"str\",  # Optional. Friendly name of the\n\
    \                 Source.\n               \"refresh\": bool,  # Optional. Boolean\
    \ flag used to refresh\n                 data from the Source.\n             \
    \  \"source\": \"str\",  # Optional. Unique source identifier. Name\n        \
    \         of the file if it's a 'file' source; otherwise, the complete URL if\
    \ it's\n                 a 'url' source.\n               \"sourceKind\": \"str\"\
    ,  # Required. Supported source types.\n                 Possible values include:\
    \ \"file\", \"url\".\n               \"sourceUri\": \"str\"  # Required. URI location\
    \ for the file or\n                 url.\n           }\n       }\n   ]\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.close
  name: close
  signature: close() -> None
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.create_project
  name: create_project
  summary: 'Create or update a project.


    Create or update a project.'
  signature: 'create_project(project_name: str, options: JSONType, **kwargs: Any)
    -> JSONType'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: options
    description: Parameters needed to create the project.
    isRequired: true
    types:
    - <xref:JSONType>
  return:
    description: JSON object
    types:
    - <xref:JSONType>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # JSON input template you can fill out and use as your body input.\n   options\
    \ = {\n       \"description\": \"str\",  # Optional. Description of the project.\n\
    \       \"language\": \"str\",  # Required. Language of the text records. This\
    \ is BCP-47\n         representation of a language. For example, use \"en\" for\
    \ English; \"es\" for Spanish\n         etc. If not set, use \"en\" for English\
    \ as default.\n       \"multilingualResource\": bool,  # Optional. Set to true\
    \ to enable creating\n         knowledgebases in different languages for the same\
    \ resource.\n       \"settings\": {\n           \"defaultAnswer\": \"str\"  #\
    \ Optional. Default Answer response when no\n             good match is found\
    \ in the knowledge base.\n       }\n   }\n\n   # response body for status code(s):\
    \ 200, 201\n   response.json() == {\n       \"createdDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Project creation\n         date-time.\n       \"description\"\
    : \"str\",  # Optional. Description of the project.\n       \"language\": \"str\"\
    ,  # Optional. Language of the text records. This is BCP-47\n         representation\
    \ of a language. For example, use \"en\" for English; \"es\" for Spanish\n   \
    \      etc. If not set, use \"en\" for English as default.\n       \"lastDeployedDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Represents the\n         project last\
    \ deployment date-time.\n       \"lastModifiedDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional. Represents the\n         project last modified date-time.\n   \
    \    \"multilingualResource\": bool,  # Optional. Resource enabled for multiple\n\
    \         languages across projects or not.\n       \"projectName\": \"str\",\
    \  # Optional. Name of the project.\n       \"settings\": {\n           \"defaultAnswer\"\
    : \"str\"  # Optional. Default Answer response when no\n             good match\
    \ is found in the knowledge base.\n       }\n   }\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.get_project_details
  name: get_project_details
  summary: 'Get the requested project metadata.


    Get the requested project metadata.'
  signature: 'get_project_details(project_name: str, **kwargs: Any) -> JSONType'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSONType>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response.json() == {\n       \"\
    createdDateTime\": \"2020-02-20 00:00:00\",  # Optional. Project creation\n  \
    \       date-time.\n       \"description\": \"str\",  # Optional. Description\
    \ of the project.\n       \"language\": \"str\",  # Optional. Language of the\
    \ text records. This is BCP-47\n         representation of a language. For example,\
    \ use \"en\" for English; \"es\" for Spanish\n         etc. If not set, use \"\
    en\" for English as default.\n       \"lastDeployedDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional. Represents the\n         project last deployment date-time.\n \
    \      \"lastModifiedDateTime\": \"2020-02-20 00:00:00\",  # Optional. Represents\
    \ the\n         project last modified date-time.\n       \"multilingualResource\"\
    : bool,  # Optional. Resource enabled for multiple\n         languages across\
    \ projects or not.\n       \"projectName\": \"str\",  # Optional. Name of the\
    \ project.\n       \"settings\": {\n           \"defaultAnswer\": \"str\"  # Optional.\
    \ Default Answer response when no\n             good match is found in the knowledge\
    \ base.\n       }\n   }\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.list_deployments
  name: list_deployments
  summary: 'List all deployments of a project.


    List all deployments of a project.'
  signature: 'list_deployments(project_name: str, **kwargs: Any) -> Iterable[JSONType]'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: The maximum number of resources to return from the collection.
    types:
    - <xref:int>
  - name: skip
    description: An offset into the collection of the first resource to be returned.
    types:
    - <xref:int>
  - name: maxpagesize
    description: The maximum number of resources to include in a single response.
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:JSONType>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response.json() == {\n       \"\
    nextLink\": \"str\",  # Optional.\n       \"value\": [\n           {\n       \
    \        \"deploymentName\": \"str\",  # Optional. Name of the deployment.\n \
    \              \"lastDeployedDateTime\": \"2020-02-20 00:00:00\"  # Optional.\n\
    \                 Represents the project last deployment date-time.\n        \
    \   }\n       ]\n   }\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.list_projects
  name: list_projects
  summary: 'Gets all projects for a user.


    Gets all projects for a user.'
  signature: 'list_projects(**kwargs: Any) -> Iterable[JSONType]'
  parameters:
  - name: top
    description: The maximum number of resources to return from the collection.
    types:
    - <xref:int>
  - name: skip
    description: An offset into the collection of the first resource to be returned.
    types:
    - <xref:int>
  - name: maxpagesize
    description: The maximum number of resources to include in a single response.
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:JSONType>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response.json() == {\n       \"\
    nextLink\": \"str\",  # Optional.\n       \"value\": [\n           {\n       \
    \        \"createdDateTime\": \"2020-02-20 00:00:00\",  # Optional.\n        \
    \         Project creation date-time.\n               \"description\": \"str\"\
    ,  # Optional. Description of the\n                 project.\n               \"\
    language\": \"str\",  # Optional. Language of the text records.\n            \
    \     This is BCP-47 representation of a language. For example, use \"en\" for\n\
    \                 English; \"es\" for Spanish etc. If not set, use \"en\" for\
    \ English as\n                 default.\n               \"lastDeployedDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional.\n                 Represents the project\
    \ last deployment date-time.\n               \"lastModifiedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional.\n                 Represents the project last modified\
    \ date-time.\n               \"multilingualResource\": bool,  # Optional. Resource\
    \ enabled\n                 for multiple languages across projects or not.\n \
    \              \"projectName\": \"str\",  # Optional. Name of the project.\n \
    \              \"settings\": {\n                   \"defaultAnswer\": \"str\"\
    \  # Optional. Default Answer\n                     response when no good match\
    \ is found in the knowledge base.\n               }\n           }\n       ]\n\
    \   }\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.list_qnas
  name: list_qnas
  summary: 'Gets all the QnAs of a project.


    Gets all the QnAs of a project.'
  signature: 'list_qnas(project_name: str, **kwargs: Any) -> Iterable[JSONType]'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: source
    description: Source of the QnA.
    types:
    - <xref:str>
  - name: top
    description: The maximum number of resources to return from the collection.
    types:
    - <xref:int>
  - name: skip
    description: An offset into the collection of the first resource to be returned.
    types:
    - <xref:int>
  - name: maxpagesize
    description: The maximum number of resources to include in a single response.
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:JSONType>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response.json() == {\n       \"\
    nextLink\": \"str\",  # Optional.\n       \"value\": [\n           {\n       \
    \        \"activeLearningSuggestions\": [\n                   {\n            \
    \           \"clusterHead\": \"str\",  # Optional. Question\n                \
    \         chosen as the head of suggested questions cluster by Active\n      \
    \                   Learning clustering algorithm.\n                       \"\
    suggestedQuestions\": [\n                           {\n                      \
    \         \"autoSuggestedCount\": 0,  #\n                                 Optional.\
    \ The number of times the question was suggested\n                           \
    \      automatically by the Active Learning algorithm.\n                     \
    \          \"question\": \"str\",  #\n                                 Optional.\
    \ Question suggested by the Active Learning\n                                \
    \ feature.\n                               \"userSuggestedCount\": 0  #\n    \
    \                             Optional. The number of times the question was suggested\n\
    \                                 explicitly by the user.\n                  \
    \         }\n                       ]\n                   }\n               ],\n\
    \               \"answer\": \"str\",  # Optional. Answer text.\n             \
    \  \"dialog\": {\n                   \"isContextOnly\": bool,  # Optional. To\
    \ mark if a\n                     prompt is relevant only with a previous question\
    \ or not. If true, do\n                     not include this QnA as answer for\
    \ queries without context;\n                     otherwise, ignores context and\
    \ includes this QnA in answers.\n                   \"prompts\": [\n         \
    \              {\n                           \"displayOrder\": 0,  # Optional.\
    \ Index\n                             of the prompt. It is used for ordering of\
    \ the prompts.\n                           \"displayText\": \"str\",  # Optional.\n\
    \                             Text displayed to represent a follow up question\
    \ prompt.\n                           \"qna\": {\n                           \
    \    \"activeLearningSuggestions\":\n                                 [\n    \
    \                               {\n   \"clusterHead\": \"str\",  # Optional. Question\n\
    \                                         chosen as the head of suggested questions\
    \ cluster\n                                         by Active Learning clustering\
    \ algorithm.\n   \"suggestedQuestions\": [\n                                 \
    \          {\n   \"autoSuggestedCount\": 0,  # Optional. The\n               \
    \                                  number of times the question was\n        \
    \                                         suggested automatically by the Active\n\
    \                                                 Learning algorithm.\n   \"question\"\
    : \"str\",  # Optional. Question\n                                           \
    \      suggested by the Active Learning feature.\n   \"userSuggestedCount\": 0\
    \  # Optional. The\n                                                 number of\
    \ times the question was\n                                                 suggested\
    \ explicitly by the user.\n                                           }\n    \
    \                                   ]\n                                   }\n\
    \                               ],\n                               \"answer\"\
    : \"str\",  # Optional.\n                                 Answer text.\n     \
    \                          \"dialog\": ...,\n                               \"\
    id\": 0,  # Optional. Unique\n                                 ID for the QnA.\n\
    \                               \"metadata\": {\n                            \
    \       \"str\": \"str\"  #\n                                     Optional. Metadata\
    \ associated with the answer, useful\n                                     to\
    \ categorize or filter question answers.\n                               },\n\
    \                               \"questions\": [\n                           \
    \        \"str\"  # Optional.\n                                     List of questions\
    \ associated with the answer.\n                               ],\n           \
    \                    \"source\": \"str\"  # Optional.\n                      \
    \           Source from which QnA was indexed e.g.\n                         \
    \        https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs\n\
    \                                 .\n                           },\n         \
    \                  \"qnaId\": 0  # Optional. ID of the QnA\n                 \
    \            corresponding to the prompt.\n                       }\n        \
    \           ]\n               },\n               \"id\": 0,  # Optional. Unique\
    \ ID for the QnA.\n               \"lastUpdatedDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional.\n                 Date-time when the QnA was last updated.\n  \
    \             \"metadata\": {\n                   \"str\": \"str\"  # Optional.\
    \ Metadata associated with\n                     the answer, useful to categorize\
    \ or filter question answers.\n               },\n               \"questions\"\
    : [\n                   \"str\"  # Optional. List of questions associated with\n\
    \                     the answer.\n               ],\n               \"source\"\
    : \"str\"  # Optional. Source from which QnA was\n                 indexed e.g.\n\
    \                 https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs\
    \ .\n           }\n       ]\n   }\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.list_sources
  name: list_sources
  summary: 'Gets all the sources of a project.


    Gets all the sources of a project.'
  signature: 'list_sources(project_name: str, **kwargs: Any) -> Iterable[JSONType]'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: The maximum number of resources to return from the collection.
    types:
    - <xref:int>
  - name: skip
    description: An offset into the collection of the first resource to be returned.
    types:
    - <xref:int>
  - name: maxpagesize
    description: The maximum number of resources to include in a single response.
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:JSONType>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response.json() == {\n       \"\
    nextLink\": \"str\",  # Optional.\n       \"value\": [\n           {\n       \
    \        \"contentStructureKind\": \"unstructured\",  # Optional. Default\n  \
    \               value is \"unstructured\". Content structure type for sources.\
    \ Possible\n                 values include: \"unstructured\".\n             \
    \  \"displayName\": \"str\",  # Optional. Friendly name of the\n             \
    \    Source.\n               \"lastUpdatedDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional.\n                 Date-time when the QnA was last updated.\n  \
    \             \"source\": \"str\",  # Optional. Unique source identifier. Name\n\
    \                 of the file if it's a 'file' source; otherwise, the complete\
    \ URL if it's\n                 a 'url' source.\n               \"sourceKind\"\
    : \"str\",  # Required. Supported source types.\n                 Possible values\
    \ include: \"file\", \"url\".\n               \"sourceUri\": \"str\"  # Required.\
    \ URI location for the file or\n                 url.\n           }\n       ]\n\
    \   }\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.list_synonyms
  name: list_synonyms
  summary: 'Gets all the synonyms of a project.


    Gets all the synonyms of a project.'
  signature: 'list_synonyms(project_name: str, **kwargs: Any) -> Iterable[JSONType]'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: The maximum number of resources to return from the collection.
    types:
    - <xref:int>
  - name: skip
    description: An offset into the collection of the first resource to be returned.
    types:
    - <xref:int>
  - name: maxpagesize
    description: The maximum number of resources to include in a single response.
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:JSONType>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response.json() == {\n       \"\
    nextLink\": \"str\",  # Optional.\n       \"value\": [\n           {\n       \
    \        \"alterations\": [\n                   \"str\"  # Required. Collection\
    \ of word alterations.\n               ]\n           }\n       ]\n   }\n   ````\n"
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = client.send_request(request)

    <HttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)'
  signature: 'send_request(request: HttpRequest, **kwargs: Any) -> HttpResponse'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.HttpResponse>
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.update_synonyms
  name: update_synonyms
  summary: 'Updates all the synonyms of a project.


    Updates all the synonyms of a project.'
  signature: 'update_synonyms(project_name: str, synonyms: JSONType, **kwargs: Any)
    -> None'
  parameters:
  - name: project_name
    description: The name of the project to use.
    isRequired: true
    types:
    - <xref:str>
  - name: synonyms
    description: All the synonyms of a project.
    isRequired: true
    types:
    - <xref:JSONType>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # JSON input template you can fill out and use as your body input.\n   synonyms\
    \ = {\n       \"nextLink\": \"str\",  # Optional.\n       \"value\": [\n     \
    \      {\n               \"alterations\": [\n                   \"str\"  # Required.\
    \ Collection of word alterations.\n               ]\n           }\n       ]\n\
    \   }\n   ````\n"
