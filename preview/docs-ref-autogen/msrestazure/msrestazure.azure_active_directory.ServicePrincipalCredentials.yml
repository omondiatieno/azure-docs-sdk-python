### YamlMime:PythonClass
uid: msrestazure.azure_active_directory.ServicePrincipalCredentials
name: ServicePrincipalCredentials
fullName: msrestazure.azure_active_directory.ServicePrincipalCredentials
module: msrestazure.azure_active_directory
inheritances:
- msrestazure.azure_active_directory.AADMixin
summary: "Credentials object for Service Principle Authentication.\nAuthenticates\
  \ via a Client ID and Secret.\n\nOptional kwargs may include:\n\n* cloud_environment\
  \ (msrestazure.azure_cloud.Cloud): A targeted cloud environment \n\n* china (bool):\
  \ Configure auth for China-based service, default is 'False'. \n\n* tenant (str):\
  \ Alternative tenant, default is 'common'. \n\n* resource (str): Alternative authentication\
  \ resource, default is '[https://management.core.windows.net/](https://management.core.windows.net/)'.\
  \ \n\n* verify (bool): Verify secure connection, default is 'True'. \n\n* timeout\
  \ (int): Timeout of the request in seconds. \n\n* proxies (dict): Dictionary mapping\
  \ protocol or protocol and hostname to the URL of the proxy. \n\n* cache (adal.TokenCache):\
  \ A adal.TokenCache, see ADAL configuration \n\nfor details. This parameter is not\
  \ used here and directly passed to ADAL."
constructor:
  syntax: ServicePrincipalCredentials(client_id, secret, **kwargs)
  parameters:
  - name: client_id
    description: Client ID.
    isRequired: true
    types:
    - <xref:str>
  - name: secret
    description: Client secret.
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: msrestazure.azure_active_directory.ServicePrincipalCredentials.construct_auth
  name: construct_auth
  summary: Format token header.
  signature: construct_auth() -> str
  return:
    types:
    - <xref:str>
- uid: msrestazure.azure_active_directory.ServicePrincipalCredentials.refresh_session
  name: refresh_session
  summary: 'Return updated session if token has expired, attempts to

    refresh using newly acquired token.


    If a session object is provided, configure it directly. Otherwise,

    create a new session and return it.'
  signature: refresh_session(session=None)
  parameters:
  - name: session
    description: The session to configure for authentication
    defaultValue: None
    types:
    - <xref:requests.Session>
  return:
    types:
    - <xref:requests.Session.>
- uid: msrestazure.azure_active_directory.ServicePrincipalCredentials.set_token
  name: set_token
  summary: Get token using Client ID/Secret credentials.
  signature: set_token()
  exceptions:
  - type: <xref:AuthenticationError if credentials invalid>, <xref:or call fails.>
- uid: msrestazure.azure_active_directory.ServicePrincipalCredentials.signed_session
  name: signed_session
  summary: 'Create token-friendly Requests session, using auto-refresh.

    Used internally when a request is made.


    If a session object is provided, configure it directly. Otherwise,

    create a new session and return it.'
  signature: signed_session(session=None)
  parameters:
  - name: session
    description: The session to configure for authentication
    defaultValue: None
    types:
    - <xref:requests.Session>
attributes:
- uid: msrestazure.azure_active_directory.ServicePrincipalCredentials.cloud_environment
  name: cloud_environment
- uid: msrestazure.azure_active_directory.ServicePrincipalCredentials.proxies
  name: proxies
- uid: msrestazure.azure_active_directory.ServicePrincipalCredentials.timeout
  name: timeout
- uid: msrestazure.azure_active_directory.ServicePrincipalCredentials.verify
  name: verify
- uid: msrestazure.azure_active_directory.ServicePrincipalCredentials.header
  name: header
  signature: header = 'Authorization'
