### YamlMime:PythonClass
uid: azure.eventgrid.aio.EventGridClient
name: EventGridClient
fullName: azure.eventgrid.aio.EventGridClient
module: azure.eventgrid.aio
inheritances:
- azure.eventgrid.aio._client.EventGridClient
summary: Azure Messaging EventGrid Client.
constructor:
  syntax: 'EventGridClient(endpoint: str, credential: AzureKeyCredential, **kwargs)'
  parameters:
  - name: endpoint
    description: 'The host name of the namespace, e.g.

      namespaceName1.westus-1.eventgrid.azure.net. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: Credential needed for the client to connect to Azure. Required.
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
  - name: api_version
    description: 'The API version to use for this operation. Default value is

      "2023-06-01-preview". Note that overriding this default value may result in
      unsupported

      behavior.'
    types:
    - <xref:str>
methods:
- uid: azure.eventgrid.aio.EventGridClient.acknowledge_cloud_events
  name: acknowledge_cloud_events
  summary: 'Acknowledge batch of Cloud Events. The server responds with an HTTP 200
    status code if at least

    one event is successfully acknowledged. The response body will include the set
    of successfully

    acknowledged lockTokens, along with other failed lockTokens with their corresponding
    error

    information. Successfully acknowledged events will no longer be available to any
    consumer.'
  signature: 'async acknowledge_cloud_events(topic_name: str, event_subscription_name:
    str, lock_tokens: AcknowledgeOptions, **kwargs: Any) -> AcknowledgeResult'
  parameters:
  - name: topic_name
    description: Topic Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Event Subscription Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: lock_tokens
    description: AcknowledgeOptions. Required.
    isRequired: true
    types:
    - <xref:azure.eventgrid.models.AcknowledgeOptions>
  - name: content_type
    description: content type. Default value is "application/json; charset=utf-8".
    types:
    - <xref:str>
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: AcknowledgeResult. The AcknowledgeResult is compatible with MutableMapping
    types:
    - <xref:azure.eventgrid.models.AcknowledgeResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.eventgrid.aio.EventGridClient.close
  name: close
  signature: async close() -> None
- uid: azure.eventgrid.aio.EventGridClient.publish_cloud_events
  name: publish_cloud_events
  summary: 'Publish Batch Cloud Event or Events to namespace topic. In case of success,
    the server responds with an

    HTTP 200 status code with an empty JSON object in response. Otherwise, the server
    can return

    various error codes. For example, 401: which indicates authorization failure,
    403: which

    indicates quota exceeded or message is too large, 410: which indicates that specific
    topic is

    not found, 400: for bad request, and 500: for internal server error.'
  signature: 'async publish_cloud_events(topic_name: str, body: List[CloudEvent] |
    CloudEvent, **kwargs) -> None'
  parameters:
  - name: topic_name
    description: Topic Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Cloud Event or Array of Cloud Events being published. Required.
    isRequired: true
    types:
    - <xref:azure.core.messaging.CloudEvent>
    - <xref:list>[<xref:azure.core.messaging.CloudEvent>]
  - name: content_type
    description: 'content type. Default value is "application/cloudevents+json;

      charset=utf-8".'
    types:
    - <xref:str>
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.eventgrid.aio.EventGridClient.receive_cloud_events
  name: receive_cloud_events
  summary: Receive Batch of Cloud Events from the Event Subscription.
  signature: 'async receive_cloud_events(topic_name: str, event_subscription_name:
    str, *, max_events: int | None = None, max_wait_time: int | None = None, **kwargs:
    Any) -> ReceiveResult'
  parameters:
  - name: topic_name
    description: Topic Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Event Subscription Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: max_events
    description: 'Max Events count to be received. Minimum value is 1, while maximum
      value

      is 100 events. If not specified, the default value is 1. Default value is None.'
    types:
    - <xref:int>
  - name: max_wait_time
    description: 'Max wait time value for receive operation in Seconds. It is the
      time in

      seconds that the server approximately waits for the availability of an event
      and responds to

      the request. If an event is available, the broker responds immediately to the
      client. Minimum

      value is 10 seconds, while maximum value is 120 seconds. If not specified, the
      default value is

      60 seconds. Default value is None.'
    types:
    - <xref:int>
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: ReceiveResult. The ReceiveResult is compatible with MutableMapping
    types:
    - <xref:azure.eventgrid.models.ReceiveResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.eventgrid.aio.EventGridClient.reject_cloud_events
  name: reject_cloud_events
  summary: Reject batch of Cloud Events.
  signature: 'async reject_cloud_events(topic_name: str, event_subscription_name:
    str, lock_tokens: RejectOptions, **kwargs: Any) -> RejectResult'
  parameters:
  - name: topic_name
    description: Topic Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Event Subscription Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: lock_tokens
    description: RejectOptions. Required.
    isRequired: true
    types:
    - <xref:azure.eventgrid.models.RejectOptions>
  - name: content_type
    description: content type. Default value is "application/json; charset=utf-8".
    types:
    - <xref:str>
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: RejectResult. The RejectResult is compatible with MutableMapping
    types:
    - <xref:azure.eventgrid.models.RejectResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.eventgrid.aio.EventGridClient.release_cloud_events
  name: release_cloud_events
  summary: 'Release batch of Cloud Events. The server responds with an HTTP 200 status
    code if at least one

    event is successfully released. The response body will include the set of successfully
    released

    lockTokens, along with other failed lockTokens with their corresponding error
    information.'
  signature: 'async release_cloud_events(topic_name: str, event_subscription_name:
    str, lock_tokens: ReleaseOptions, **kwargs: Any) -> ReleaseResult'
  parameters:
  - name: topic_name
    description: Topic Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Event Subscription Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: lock_tokens
    description: ReleaseOptions. Required.
    isRequired: true
    types:
    - <xref:azure.eventgrid.models.ReleaseOptions>
  - name: content_type
    description: content type. Default value is "application/json; charset=utf-8".
    types:
    - <xref:str>
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: ReleaseResult. The ReleaseResult is compatible with MutableMapping
    types:
    - <xref:azure.eventgrid.models.ReleaseResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.eventgrid.aio.EventGridClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, **kwargs: Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
